==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.074 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.593 seconds; peak allocated memory: 1.244 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.411 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.082 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.037 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.753 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.282 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 1.242 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.268 seconds; current allocated memory: 1.242 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.326 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.049 seconds; current allocated memory: 1.242 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.743 seconds; current allocated memory: 1.242 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 19.178 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 27.025 seconds; peak allocated memory: 1.242 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 17.725 seconds; current allocated memory: 1.340 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.994 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.898 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 8.069 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.225 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 6.414 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.696 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.218 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 15.766 seconds; current allocated memory: 2.176 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 20.02 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.838 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.023 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.78 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.073 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.131 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.649 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.598 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.854 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.497 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.868 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 36.222 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 5 seconds. Total elapsed time: 50.828 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.135 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 16.014 seconds; peak allocated memory: 1.233 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.874 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 7.19 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 5.133 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.144 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.464 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 9.361 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.119 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.897 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.73 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.766 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.428 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.511 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.537 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.236 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.073 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.109 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.855 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.756 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.371 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.672 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.188 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.217 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.51 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 8.93 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.985 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 16.375 seconds; peak allocated memory: 1.240 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.021 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.441 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.15 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.861 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.753 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 18.355 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.142 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 14.787 seconds; current allocated memory: 1.754 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 18.616 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.022 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.18 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.298 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.437 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.171 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.717 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 16.605 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.246 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.228 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 26.178 seconds; peak allocated memory: 1.248 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.237 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.218 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.392 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.032 seconds; peak allocated memory: 1.239 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.776 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.891 seconds; peak allocated memory: 1.249 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 7.868 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.062 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.315 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.626 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 15.707 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.67 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.608 seconds; current allocated memory: 1.863 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 18.428 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-5550] unexpected pragma parameter 'depth' (FAST/solution1/fast.cpp:10:39)
WARNING: [HLS 207-5550] unexpected pragma parameter 'depth' (FAST/solution1/fast.cpp:11:39)
WARNING: [HLS 207-5550] unexpected pragma parameter 'depth' (FAST/solution1/fast.cpp:12:39)
WARNING: [HLS 207-5550] unexpected pragma parameter 'depth' (FAST/solution1/fast.cpp:13:39)
WARNING: [HLS 207-5550] unexpected pragma parameter 'depth' (FAST/solution1/fast.cpp:14:39)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.727 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.076 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.253 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (FAST/solution1/fast.cpp:24) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.266 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_24_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Port 'fast_accel/img_in' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/cols' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.318 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.891 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.492 seconds; current allocated memory: 1.253 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 15.402 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.013 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 17.966 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 23.558 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.426 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 26.315 seconds; peak allocated memory: 1.210 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 42.916 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 49.521 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.912 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.228 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.427 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 17.968 seconds; peak allocated memory: 1.182 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.84 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.843 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.625 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.127 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_180_1' (FAST/solution1/fast.cpp:182) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.242 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.121 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_180_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_180_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.715 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.205 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.772 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.93 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 149.43 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 22.744 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 26.493 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
ERROR: [COSIM 212-345] Cosim only supports the following 'ap_ctrl_none' designs: (1) combinational designs; (2) pipelined design with II of 1; (3) designs with array streaming or hls_stream or AXI4 stream ports.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.601 seconds; current allocated memory: 2.043 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 2 seconds. Total elapsed time: 4.281 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.2 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.458 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_180_1' (FAST/solution1/fast.cpp:182) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_180_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_180_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.092 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.204 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.687 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.568 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 149.43 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 13.756 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 17.5 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 60.588 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 65.248 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.715 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 7.362 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.296 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.148 seconds; peak allocated memory: 1.236 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.642 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.779 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.191 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 5.287 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.341 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.053 seconds; peak allocated memory: 1.235 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.698 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 9.036 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.435 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.036 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.031 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.132 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.251 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.201 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.39 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.77 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.53 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 13.892 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 17.284 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 12.569 seconds; current allocated memory: 2.152 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 15.854 seconds; peak allocated memory: 1.258 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.739 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.769 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.166 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.194 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.721 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.669 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 17.739 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.834 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.788 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 19.08 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.051 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.273 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.119 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.145 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.278 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.472 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.539 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 13.125 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 16.782 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 15.385 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.849 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.791 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.245 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.037 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 1.245 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.546 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.647 seconds; current allocated memory: 1.245 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.842 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 25.35 seconds; peak allocated memory: 1.245 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 16.733 seconds; current allocated memory: 0.973 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.392 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.574 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.598 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.256 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:138) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.149 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.148 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.583 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.594 seconds; current allocated memory: 1.256 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 15.023 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.367 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 21.48 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 26.677 seconds; peak allocated memory: 1.243 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.915 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.415 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.035 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.068 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.48 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.538 seconds; current allocated memory: 1.256 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 13.916 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 17.538 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 24.238 seconds; current allocated memory: 1.906 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 27.93 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.873 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.193 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.036 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.028 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.125 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.366 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.524 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 15.629 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 19.136 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 27.391 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 32.913 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.879 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.805 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.251 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.188 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.91 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.19 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 24.096 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 33.971 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 4 seconds. Total elapsed time: 41.431 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.014 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.316 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.035 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.173 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.121 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.576 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.704 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 14.262 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 18.808 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 34.761 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 4 seconds. Total elapsed time: 43.007 seconds; peak allocated memory: 1.240 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.877 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.656 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.076 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.972 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.002 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 23.202 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 26.552 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 28.156 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 32.843 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.708 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.229 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.218 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.297 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.377 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.334 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.245 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 17.092 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.72 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 17.839 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 24.182 seconds; peak allocated memory: 1.243 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.166 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.281 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.129 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.068 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.161 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.809 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.094 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 23.265 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 27.053 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 25.069 seconds; current allocated memory: 1.965 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 28.617 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.767 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.364 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.043 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 20, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.264 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.708 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.594 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 150.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.576 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.448 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 25.295 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 30.811 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.021 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.466 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.108 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.055 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.166 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.997 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.648 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 15.082 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.393 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 30.074 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 4 seconds. Total elapsed time: 39.209 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 9.637 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.124 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:7) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.139 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.146 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.504 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.641 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.907 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.623 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-210] Design is translated to an combinational logic. II and Latency will be marked as all 0.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 41.554 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 4 seconds. Total elapsed time: 51.492 seconds; peak allocated memory: 1.233 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.025 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.088 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.802 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.094 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.182 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.723 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.717 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.221 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 23.723 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
WARNING: [HLS 200-626] This design is unable to schedule all read ports in the first II cycle. The RTL testbench may treat the design as non-pipelined
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 17.226 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.379 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.918 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.527 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 1.252 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.167 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.583 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.768 seconds; current allocated memory: 1.252 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 16.681 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.414 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 16.208 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.043 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.937 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.622 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.245 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_187_1' (FAST/solution1/fast.cpp:189) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.097 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_187_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_187_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.249 seconds; current allocated memory: 1.245 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.778 seconds; current allocated memory: 1.245 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.764 seconds; current allocated memory: 1.245 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 149.43 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 18.015 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 23.817 seconds; peak allocated memory: 1.245 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 32.89 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 38.229 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.496 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 8.165 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.916 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.319 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_187_1' (FAST/solution1/fast.cpp:187) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_187_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_187_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.454 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.553 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 263.33 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 12.958 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 16.753 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 29.837 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 34.33 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 11.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.894 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.215 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.584 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.771 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 19.238 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 23.813 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 15.944 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.223 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.824 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.268 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (FAST/solution1/fast.cpp:26) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.123 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.031 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_26_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.158 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.122 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.447 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.534 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 263.33 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 12.731 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 16.447 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 44.323 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 49.455 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.065 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.819 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.168 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.516 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.636 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 263.33 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 15.785 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.819 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 26.96 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 33.633 seconds; peak allocated memory: 1.239 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.105 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.079 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.3 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.319 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.777 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.05 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.95 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 263.33 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 25.487 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 29.098 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 19.291 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 25.756 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.026 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.482 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.067 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.043 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.951 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 263.33 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 15.915 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.094 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 26.704 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 4 seconds. Total elapsed time: 41.848 seconds; peak allocated memory: 1.228 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.208 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.244 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.035 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.207 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.158 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.585 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.645 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 17.414 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 23.144 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 37.001 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 41.588 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.172 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.86 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.062 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.112 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.688 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.234 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 18.937 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 4 seconds. Total elapsed time: 25.209 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 36.644 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 41.893 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.525 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.501 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.037 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.139 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.523 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.626 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 15.94 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.953 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.021 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.006 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.031 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.219 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.043 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.146 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.62 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 14.197 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 18.288 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 45.375 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 4 seconds. Total elapsed time: 53.935 seconds; peak allocated memory: 1.222 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.468 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 15.377 seconds; peak allocated memory: 1.240 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.303 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 14.443 seconds; peak allocated memory: 1.233 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.593 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.986 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.528 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.089 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.59 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.709 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 255.93 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 20.134 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 25.712 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 34.119 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 39.938 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.161 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.334 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.158 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (FAST/solution1/fast.cpp:23) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_2' (FAST/solution1/fast.cpp:26) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.168 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' 
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:24:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_26_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_23_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.103 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_26_2' pipeline 'VITIS_LOOP_26_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_26_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.111 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.272 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.66 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.625 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 179.43 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 14.841 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.215 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 29.893 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 34.597 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.331 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 7 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
ERROR: [HLS 207-3701] expression is not assignable (FAST/solution1/fast.cpp:29:16)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.385 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 5.693 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.31 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 7.028 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.835 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 214-115] Multiple burst writes of length 16024 and bit width 32 in loop 'VITIS_LOOP_28_2'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.095 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 1.243 GB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_2' (FAST/solution1/fast.cpp:28) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' 
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:26:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.251 seconds; current allocated memory: 1.243 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 1.243 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 1.243 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.129 seconds; current allocated memory: 1.243 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.185 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.297 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.828 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.427 seconds; current allocated memory: 1.243 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.06 seconds; current allocated memory: 1.243 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.109 seconds; current allocated memory: 1.243 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 22.874 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 12 seconds. Total CPU system time: 4 seconds. Total elapsed time: 30.392 seconds; peak allocated memory: 1.243 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 39.154 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 46.026 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.984 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16024 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 214-115] Multiple burst writes of length 16024 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.645 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.086 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.125 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.166 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.911 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.787 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.993 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.931 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 20.35 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 27.021 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 37.162 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 42.313 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.23 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_2'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_2'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.635 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_2' (FAST/solution1/fast.cpp:28) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.135 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.319 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.093 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.448 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.347 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.732 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.907 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 15.342 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.553 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 16.545 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 21.799 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.082 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.444 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'fast_accel' (FAST/solution1/fast.cpp:8) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.126 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWADDR' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWLEN' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWSIZE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWBURST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWLOCK' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWCACHE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWPROT' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWQOS' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWREGION' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_AWUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WVALID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WDATA' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WDATA' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WSTRB' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WSTRB' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WLAST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WLAST' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_WUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_WUSER' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARADDR' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARLEN' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARSIZE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARBURST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARLOCK' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARCACHE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARPROT' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARQOS' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARREGION' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_ARUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_RREADY' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RDATA' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RLAST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_RRESP' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_BVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_BREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel/m_axi_gmem_BREADY' to 0.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_BRESP' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_BID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'fast_accel/m_axi_gmem_BUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.456 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.748 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.955 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.245 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.949 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 24.066 seconds; current allocated memory: 2.383 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 27.541 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.283 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_2'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.566 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_2' (FAST/solution1/fast.cpp:28) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:26:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.243 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.088 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.133 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.339 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.439 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.382 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.88 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.033 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.244 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 34.069 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 39.099 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.846 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_1'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_1'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.87 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_1' (FAST/solution1/fast.cpp:28) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.115 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.081 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_28_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.171 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.194 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_1' pipeline 'VITIS_LOOP_28_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.005 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.682 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.87 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.734 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 20.257 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 24.167 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 36.693 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 4 seconds. Total elapsed time: 43.105 seconds; peak allocated memory: 1.242 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.866 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.315 seconds; peak allocated memory: 1.232 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:51:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:49:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.892 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:63:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_54_2'(FAST/solution1/fast.cpp:54:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:54:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_54_2'(FAST/solution1/fast.cpp:54:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:54:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.536 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.123 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.185 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_2' (FAST/solution1/fast.cpp:54) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.288 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:51:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_54_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 26, loop 'VITIS_LOOP_54_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.624 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.856 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.955 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.36 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_54_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_54_2' pipeline 'VITIS_LOOP_54_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_54_2' is 7789 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_54_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.718 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.865 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.124 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 9 seconds. CPU system time: 1 seconds. Elapsed time: 27.934 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 15 seconds. Total CPU system time: 3 seconds. Total elapsed time: 32.545 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 45.13 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 50.362 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:51:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:49:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.732 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:63:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_54_2'(FAST/solution1/fast.cpp:54:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:54:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_54_2'(FAST/solution1/fast.cpp:54:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:54:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.26 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_2' (FAST/solution1/fast.cpp:54) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.366 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:51:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_54_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 26, loop 'VITIS_LOOP_54_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.816 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.983 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.349 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.379 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_54_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_54_2' pipeline 'VITIS_LOOP_54_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_54_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_54_2' is 7789 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_54_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.624 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 6.514 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.137 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.997 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 11 seconds. CPU system time: 1 seconds. Elapsed time: 32.86 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 17 seconds. Total CPU system time: 4 seconds. Total elapsed time: 38.533 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
ERROR: [COSIM 212-361] C TB post check failed, nonzero return value '1'.
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 56.577 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 4 seconds. Total elapsed time: 64.789 seconds; peak allocated memory: 1.221 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.024 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.269 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_1'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_28_1'(FAST/solution1/fast.cpp:28:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:28:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.603 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 1.251 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_1' (FAST/solution1/fast.cpp:28) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_28_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.215 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.128 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.177 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_1' pipeline 'VITIS_LOOP_28_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_28_1/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.877 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.472 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.771 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.917 seconds; current allocated memory: 1.251 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 19.075 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 4 seconds. Total elapsed time: 25.52 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 36.119 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 41.139 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:52:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:50:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.416 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.596 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.431 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.146 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 26, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.63 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.604 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.899 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 7789 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.074 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 2.826 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.955 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.855 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 24.027 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 14 seconds. Total CPU system time: 3 seconds. Total elapsed time: 28.24 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
ERROR: [COSIM 212-361] C TB post check failed, nonzero return value '1'.
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 41.017 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 46.118 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 20ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 20 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:52:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:50:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.605 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.67 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.089 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.093 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 23, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.418 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.48 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.712 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.327 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8266 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.447 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.423 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.141 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.894 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 68.49 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 23.783 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 13 seconds. Total CPU system time: 3 seconds. Total elapsed time: 27.582 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 20ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 20 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
ERROR: [COSIM 212-361] C TB post check failed, nonzero return value '1'.
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 35.377 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 40.404 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:52:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:50:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.962 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.589 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.45 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.524 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.823 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.064 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.307 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.907 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.865 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 24.453 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 13 seconds. Total CPU system time: 3 seconds. Total elapsed time: 28.644 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
ERROR: [COSIM 212-361] C TB post check failed, nonzero return value '1'.
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 37.497 seconds; current allocated memory: 1.961 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 41.522 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.179 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.227 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:205:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:203:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.247 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.346 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_208_2' (FAST/solution1/fast.cpp:210) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.182 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_208_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_208_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.365 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.316 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.62 seconds; current allocated memory: 1.255 GB.
WARNING: [RTMG 210-274] Memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W' using auto ROMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 3.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.584 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 36.95 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 16.892 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.425 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-359] Aborting co-simulation: C TB simulation failed, nonzero return value '1'.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 14.38 seconds; current allocated memory: 1.551 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 17.769 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:205:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:203:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.596 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.665 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:189: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_208_2' (FAST/solution1/fast.cpp:210) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.167 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:205:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_208_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_208_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_208_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.471 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.493 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.045 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.267 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_208_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_208_2' pipeline 'VITIS_LOOP_208_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_208_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.52 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.627 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.412 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.804 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 19.402 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 13 seconds. Total CPU system time: 4 seconds. Total elapsed time: 25.21 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
ERROR: [COSIM 212-361] C TB post check failed, nonzero return value '1'.
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 33.208 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 37.24 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.187 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_27_1'(FAST/solution1/fast.cpp:27:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:27:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_27_1'(FAST/solution1/fast.cpp:27:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:27:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.932 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (FAST/solution1/fast.cpp:27) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_27_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_27_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.135 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_27_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_27_1' pipeline 'VITIS_LOOP_27_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_27_1/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_27_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.388 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.792 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.88 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.809 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.719 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 20.24 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 35.08 seconds; current allocated memory: 1.617 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 38.701 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:52:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:50:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.255 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.077 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.249 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.572 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.883 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.398 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.24 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.79 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.926 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.057 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 25.347 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 15 seconds. Total CPU system time: 3 seconds. Total elapsed time: 28.915 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:52:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:50:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 10.667 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.369 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:34: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.261 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.596 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.692 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.195 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.499 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.473 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.776 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.014 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.217 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 28.157 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 15 seconds. Total CPU system time: 3 seconds. Total elapsed time: 32.425 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-359] Aborting co-simulation: C TB simulation failed, nonzero return value '1'.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 19.409 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 25.567 seconds; peak allocated memory: 1.248 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-4606] array index 16384 is past the end of the array (which contains 16384 elements) (FAST/solution1/fast.cpp:202:6)
INFO: [HLS 207-4105] array 'IMG' declared here (FAST/solution1/fast.cpp:200:5)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.62 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.478 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] FAST/solution1/fast.cpp:186: in function 'fast_accel': warning: out of bound array access on variable 'IMG'.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_205_2' (FAST/solution1/fast.cpp:207) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.122 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:202:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_205_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_205_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.386 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.398 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.565 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.216 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_205_2' pipeline 'VITIS_LOOP_205_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_205_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.474 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 1.668 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.715 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.075 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 21.033 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 3 seconds. Total elapsed time: 25.386 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-359] Aborting co-simulation: C TB simulation failed, nonzero return value '1'.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 15.511 seconds; current allocated memory: 0.336 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 19.707 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.255 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.988 seconds; peak allocated memory: 1.246 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.31 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 10.839 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.437 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.522 seconds; peak allocated memory: 1.214 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.122 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.847 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.007 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.096 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.028 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.313 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_201_1'(FAST/solution1/fast.cpp:201:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:201:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.445 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.250 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_201_1' (FAST/solution1/fast.cpp:201) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_205_2' (FAST/solution1/fast.cpp:207) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:202:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_201_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_201_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.305 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.068 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_205_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_205_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.59 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.816 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.333 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_201_1' pipeline 'VITIS_LOOP_201_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_201_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.652 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_205_2' pipeline 'VITIS_LOOP_205_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_205_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.325 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 1.93 seconds; current allocated memory: 1.250 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.424 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.093 seconds; current allocated memory: 1.250 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 25.378 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 14 seconds. Total CPU system time: 4 seconds. Total elapsed time: 32.003 seconds; peak allocated memory: 1.250 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 9.826 seconds; current allocated memory: 2.430 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 13.967 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.848 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_201_1'(FAST/solution1/fast.cpp:201:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:201:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.822 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.103 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_201_1' (FAST/solution1/fast.cpp:201) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_205_2' (FAST/solution1/fast.cpp:207) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.218 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:202:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_201_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_201_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_205_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_205_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.289 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.391 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.646 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.218 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_201_1' pipeline 'VITIS_LOOP_201_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_201_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.634 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_205_2' pipeline 'VITIS_LOOP_205_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_205_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.816 seconds; current allocated memory: 1.254 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.447 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.037 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 20.33 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 12 seconds. Total CPU system time: 3 seconds. Total elapsed time: 24.947 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 40.58 seconds; current allocated memory: 2.453 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 44.629 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.244 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_51_1'(FAST/solution1/fast.cpp:51:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:51:22)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.262 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.086 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_1' (FAST/solution1/fast.cpp:51) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.261 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_51_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.427 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.79 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.091 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.491 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_51_1' pipeline 'VITIS_LOOP_51_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_51_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.863 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.718 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.249 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.459 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.585 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 11 seconds. CPU system time: 2 seconds. Elapsed time: 32.254 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 17 seconds. Total CPU system time: 4 seconds. Total elapsed time: 36.634 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 48.448 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 3 seconds. Total elapsed time: 54.032 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.573 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_51_1'(FAST/solution1/fast.cpp:51:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:51:22)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.326 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.124 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_1' (FAST/solution1/fast.cpp:51) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.256 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.132 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_51_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.181 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.416 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.105 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.813 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.314 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_51_1' pipeline 'VITIS_LOOP_51_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_51_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.902 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.9 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.052 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.622 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.431 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 2 seconds. Elapsed time: 28.534 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 16 seconds. Total CPU system time: 4 seconds. Total elapsed time: 33.314 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 60.385 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 11 seconds. Total CPU system time: 3 seconds. Total elapsed time: 66.401 seconds; peak allocated memory: 1.249 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.661 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 19.915 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.338 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_201_1'(FAST/solution1/fast.cpp:201:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:201:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.411 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.601 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 1.190 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_201_1' (FAST/solution1/fast.cpp:201) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_205_2' (FAST/solution1/fast.cpp:207) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.188 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:202:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_201_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_201_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.708 seconds; current allocated memory: 1.190 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_205_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_205_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.607 seconds; current allocated memory: 1.190 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.739 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.977 seconds; current allocated memory: 1.190 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_201_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_201_1' pipeline 'VITIS_LOOP_201_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_201_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_201_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.261 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_205_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_205_2' pipeline 'VITIS_LOOP_205_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_205_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.857 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 2.984 seconds; current allocated memory: 1.190 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.639 seconds; current allocated memory: 1.190 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.684 seconds; current allocated memory: 1.190 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 54.019 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 17 seconds. Total CPU system time: 4 seconds. Total elapsed time: 63.338 seconds; peak allocated memory: 1.190 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 82.077 seconds; current allocated memory: 2.016 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 85.802 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.151 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 18.717 seconds; peak allocated memory: 1.185 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.764 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_51_1'(FAST/solution1/fast.cpp:51:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:51:22)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.225 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_1' (FAST/solution1/fast.cpp:51) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.237 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.143 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_51_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.328 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.419 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.864 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.431 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.04 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_51_1' pipeline 'VITIS_LOOP_51_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_51_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.656 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.369 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 6.734 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.681 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.716 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 42.353 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 18 seconds. Total CPU system time: 3 seconds. Total elapsed time: 46.49 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 117.985 seconds; current allocated memory: 2.035 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 122.407 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.23 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.7 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.024 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.312 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:64:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:65:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:66:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:67:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:68:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:69:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:70:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:71:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:72:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:73:27)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:74:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:75:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:76:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:77:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:78:28)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:79:28)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_51_1'(FAST/solution1/fast.cpp:51:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:51:22)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.499 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_1' (FAST/solution1/fast.cpp:51) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.121 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_51_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.073 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.481 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.632 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.959 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.42 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_51_1' pipeline 'VITIS_LOOP_51_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_51_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.071 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.913 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.173 seconds; current allocated memory: 1.254 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.131 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.472 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 34.167 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 16 seconds. Total CPU system time: 4 seconds. Total elapsed time: 38.867 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 50.064 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 55.117 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.919 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 11.457 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.898 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:82:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:88:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:94:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:100:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:110:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:115:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:120:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:125:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:130:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:135:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:140:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:145:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:150:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:155:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:160:17)
WARNING: [HLS 214-167] The program may have out of bound array access (FAST/solution1/fast.cpp:165:17)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_51_1'(FAST/solution1/fast.cpp:51:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:51:22)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'VITIS_LOOP_55_2'(FAST/solution1/fast.cpp:55:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:55:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.938 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.068 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_1' (FAST/solution1/fast.cpp:51) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_2' (FAST/solution1/fast.cpp:55) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.261 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:52:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_51_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 21, loop 'VITIS_LOOP_55_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.368 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.488 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.592 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.385 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_51_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_51_1' pipeline 'VITIS_LOOP_51_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_51_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_51_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.674 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_55_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_55_2' pipeline 'VITIS_LOOP_55_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_55_2/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_55_2' is 8243 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'srem_15ns_32ns_15_19_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_55_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.059 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.384 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 1.924 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.918 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 22.626 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 13 seconds. Total CPU system time: 3 seconds. Total elapsed time: 26.046 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.971 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_183_1'(FAST/solution1/fast.cpp:183:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:183:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.381 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.043 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_183_1' (FAST/solution1/fast.cpp:183) in function 'fast_accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_187_2' (FAST/solution1/fast.cpp:189) in function 'fast_accel' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG' (FAST/solution1/fast.cpp:184:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_183_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_183_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_183_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_187_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_187_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 17, loop 'VITIS_LOOP_187_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.434 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.579 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_183_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_183_1' pipeline 'VITIS_LOOP_183_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_183_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_183_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.611 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_187_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_187_2' pipeline 'VITIS_LOOP_187_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_187_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.364 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.828 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.441 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.827 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 18.686 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 12 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.254 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.485 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:182:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_184_1'(FAST/solution1/fast.cpp:184:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:184:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.33 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:182) in dimension 1 with a cyclic factor 27.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.482 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:186:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.981 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_184_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_184_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_184_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.992 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.128 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_189_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_189_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 44, loop 'VITIS_LOOP_189_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.893 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 2.41 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.483 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_184_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_184_1' pipeline 'VITIS_LOOP_184_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_184_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_184_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.806 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_189_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_189_2' pipeline 'VITIS_LOOP_189_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_189_2' is 11691 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_1_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_189_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.203 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.516 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.095 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 3 seconds. Elapsed time: 39.395 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 25 seconds. Total CPU system time: 5 seconds. Total elapsed time: 43.532 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.042 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 4 seconds. Total elapsed time: 15.747 seconds; peak allocated memory: 1.244 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.404 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.739 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.97 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 7.162 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.404 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::pragma() const' into 'hls::vector<int, 16384ul>::operator[](unsigned long)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\hls_vector.h:142:5)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:187:2)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:197:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:202:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:207:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:212:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:222:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:227:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:232:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:237:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:242:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:247:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:252:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:257:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:262:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:267:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:272:17)
INFO: [HLS 214-131] Inlining function 'hls::vector<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:277:17)
INFO: [HLS 214-178] Inlining function 'std::__array_traits<int, 16384ul>::_S_ref(int const (&) [16384], unsigned long)' into 'std::array<int, 16384ul>::operator[](unsigned long)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\array:182:0)
INFO: [HLS 214-178] Inlining function 'std::array<int, 16384ul>::operator[](unsigned long)' into 'fast_accel(int*, int, int*, int, int)' (FAST/solution1/fast.cpp:169:0)
ERROR: [HLS 214-256] in function 'fast_accel(int*, int, int*, int, int)': Unsupported aggregate pragma/directive on variable 'IMG' as the bit-width after aggregation (524288) is larger than 4096 (FAST/solution1/fast.cpp:184:15)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.134 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 22.188 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.957 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.178 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 11.062 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:182:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_185_1'(FAST/solution1/fast.cpp:185:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:185:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.403 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.253 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:182) in dimension 1 with a cyclic factor 27.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.422 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:187:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.412 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_185_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_185_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_185_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.741 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.114 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_192_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_192_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 44, loop 'VITIS_LOOP_192_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 5.37 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.354 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.006 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.299 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_185_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_185_1' pipeline 'VITIS_LOOP_185_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_185_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.764 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_192_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_192_2' pipeline 'VITIS_LOOP_192_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_192_2' is 11691 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_1_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_192_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.15 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 2 seconds. Elapsed time: 5.384 seconds; current allocated memory: 1.253 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.573 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.309 seconds; current allocated memory: 1.253 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.25 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 3 seconds. Elapsed time: 41.617 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 28 seconds. Total CPU system time: 6 seconds. Total elapsed time: 46.636 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 54.402 seconds; current allocated memory: 2.477 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 58.866 seconds; peak allocated memory: 1.258 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.024 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 11.982 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:182:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_185_1'(FAST/solution1/fast.cpp:185:23) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:185:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 7.395 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.251 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:182) in dimension 1 with a cyclic factor 27.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.491 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:187:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.49 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_185_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_185_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_185_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.654 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.111 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_190_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_190_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 51, loop 'VITIS_LOOP_190_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.712 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.643 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.148 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.333 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_185_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_185_1' pipeline 'VITIS_LOOP_185_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_185_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_185_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.755 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_190_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_190_2' pipeline 'VITIS_LOOP_190_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_190_2' is 11902 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_190_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.266 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.016 seconds; current allocated memory: 1.251 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.197 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.101 seconds; current allocated memory: 1.251 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 3 seconds. Elapsed time: 42.542 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 5 seconds. Total elapsed time: 48.438 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.35 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.441 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.044 seconds; current allocated memory: 1.251 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.478 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.379 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.625 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.103 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 51, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.521 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.481 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.865 seconds; current allocated memory: 1.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.811 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 11902 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.331 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 2 seconds. Elapsed time: 5.022 seconds; current allocated memory: 1.251 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.566 seconds; current allocated memory: 1.251 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.204 seconds; current allocated memory: 1.251 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 21 seconds. CPU system time: 2 seconds. Elapsed time: 35.722 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 5 seconds. Total elapsed time: 41 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 54.781 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 4 seconds. Total elapsed time: 60.95 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.586 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 8.635 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.37 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.596 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:8)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.461 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.353 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.675 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.111 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 46, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 3.413 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.395 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.862 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.288 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.705 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 11546 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.37 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 4.856 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.007 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.119 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 3 seconds. Elapsed time: 33.832 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 24 seconds. Total CPU system time: 5 seconds. Total elapsed time: 37.733 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 64.099 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 4 seconds. Total elapsed time: 70.36 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.94 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.525 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 1.252 GB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (FAST/solution1/fast.cpp:25) in function 'fast_accel' automatically.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:8)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.446 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:13)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.552 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.887 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.132 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 46, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.608 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.315 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.85 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_1' pipeline 'VITIS_LOOP_25_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_25_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.764 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 11546 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.575 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 4.735 seconds; current allocated memory: 1.252 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.031 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.024 seconds; current allocated memory: 1.252 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 3 seconds. Elapsed time: 36.957 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 26 seconds. Total CPU system time: 5 seconds. Total elapsed time: 42.611 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.043 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.386 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:8)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.49 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.372 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 46, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.638 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.285 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.084 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.319 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 11546 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.269 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.633 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.147 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.992 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 2 seconds. Elapsed time: 32.875 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 24 seconds. Total CPU system time: 4 seconds. Total elapsed time: 37.276 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 5 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.362 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 8.458 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.596 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 1.175 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:8)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.803 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.838 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_30_2' (loop 'VITIS_LOOP_30_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation ('i_write_ln30', FAST/solution1/fast.cpp:30) of variable 'i', FAST/solution1/fast.cpp:30 on local variable 'i' and 'load' operation ('i', FAST/solution1/fast.cpp:34) on local variable 'i'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_30_2' (loop 'VITIS_LOOP_30_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation ('i_write_ln30', FAST/solution1/fast.cpp:30) of variable 'i', FAST/solution1/fast.cpp:30 on local variable 'i' and 'load' operation ('i', FAST/solution1/fast.cpp:34) on local variable 'i'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_30_2' (loop 'VITIS_LOOP_30_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'store' operation ('i_write_ln30', FAST/solution1/fast.cpp:30) of variable 'i', FAST/solution1/fast.cpp:30 on local variable 'i' and 'load' operation ('i', FAST/solution1/fast.cpp:34) on local variable 'i'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 4, Depth = 53, loop 'VITIS_LOOP_30_2'
WARNING: [HLS 200-871] Estimated clock period (4.336ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'fast_accel_Pipeline_VITIS_LOOP_30_2' consists of the following:	'alloca' operation ('i') [32]  (0 ns)
	'load' operation ('i', FAST/solution1/fast.cpp:34) on local variable 'i' [40]  (0 ns)
	'urem' operation ('urem_ln37', FAST/solution1/fast.cpp:37) [187]  (4.34 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.205 seconds; current allocated memory: 1.175 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.031 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 2.83 seconds; current allocated memory: 1.175 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.423 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_5_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.861 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 2 seconds. Elapsed time: 6.523 seconds; current allocated memory: 1.175 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 2.955 seconds; current allocated memory: 1.175 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.302 seconds; current allocated memory: 1.175 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 230.63 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 23 seconds. CPU system time: 3 seconds. Elapsed time: 54.502 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 29 seconds. Total CPU system time: 5 seconds. Total elapsed time: 65.536 seconds; peak allocated memory: 1.175 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 5 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: export_design -rtl verilog -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file FAST/solution1/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 120.896 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 126.126 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.025 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.448 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 32 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.302 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 1.252 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:8)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.595 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.599 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 46, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.135 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.107 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.508 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.555 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 11546 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 9 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.703 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 6.382 seconds; current allocated memory: 1.252 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 3.573 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.352 seconds; current allocated memory: 1.252 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 3 seconds. Elapsed time: 44.541 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 29 seconds. Total CPU system time: 6 seconds. Total elapsed time: 51.224 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.494 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.643 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.707 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.778 seconds; peak allocated memory: 1.242 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.129 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 9.95 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.037 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 8.287 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.161 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 13.205 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.484 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.989 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.612 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.886 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.769 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 15.139 seconds; peak allocated memory: 1.238 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.967 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 15.915 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.569 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.317 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.56 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:26)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_55_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:55:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_55_3' (FAST/solution1/fast.cpp:55:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:22:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_25_1'(FAST/solution1/fast.cpp:25:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:25:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.718 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.112 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:22) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:22:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.568 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:27:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.447 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_30_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 46, loop 'VITIS_LOOP_30_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.08 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.315 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.16 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.331 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_30_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_30_2' pipeline 'VITIS_LOOP_30_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_30_2' is 10814 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_34ns_65_2_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32s_6ns_5_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_30_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.258 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.794 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.269 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.027 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 3 seconds. Elapsed time: 35.896 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 25 seconds. Total CPU system time: 5 seconds. Total elapsed time: 40.422 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 7.48 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.855 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.367 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::plus operator+<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:777)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::plus operator+<8, false>(int, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_53_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:53:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_53_3' (FAST/solution1/fast.cpp:53:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:20:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_23_1'(FAST/solution1/fast.cpp:23:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:23:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.848 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.164 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:20) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:20:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.585 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:25:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.421 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.833 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.169 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.302 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_28_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.223 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 4.7 seconds; current allocated memory: 1.254 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.215 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.959 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 2 seconds. Elapsed time: 35.389 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 24 seconds. Total CPU system time: 4 seconds. Total elapsed time: 38.715 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.193 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 15.044 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.429 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.026 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.295 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 14.657 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.914 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.786 seconds; peak allocated memory: 1.245 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.307 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 10.776 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.026 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.316 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:17)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:24)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_53_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:53:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_53_3' (FAST/solution1/fast.cpp:53:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:20:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_23_1'(FAST/solution1/fast.cpp:23:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:23:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 12.153 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.182 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.296 seconds; current allocated memory: 1.239 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:20) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:20:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.98 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:25:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.156 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 6.512 seconds; current allocated memory: 1.239 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.896 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.202 seconds; current allocated memory: 1.239 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.348 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_28_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.416 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 2 seconds. Elapsed time: 7.157 seconds; current allocated memory: 1.239 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.048 seconds; current allocated memory: 1.239 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.616 seconds; current allocated memory: 1.239 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 29 seconds. CPU system time: 3 seconds. Elapsed time: 56.55 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 37 seconds. Total CPU system time: 6 seconds. Total elapsed time: 63.613 seconds; peak allocated memory: 1.239 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.944 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 14.811 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.326 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<7, false>::ap_int_base<6, false>(ap_int_base<6, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<7>::ap_uint<7, false>(ap_int_base<7, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<7, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:17)
INFO: [HLS 214-131] Inlining function 'bool operator><6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:24)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint<7>(ap_uint<7> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_53_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:53:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_53_3' (FAST/solution1/fast.cpp:53:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:20:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_23_1'(FAST/solution1/fast.cpp:23:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:23:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 6.916 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.108 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.181 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:20) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:20:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.621 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:25:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.425 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.243 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.381 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.531 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.351 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_28_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.08 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 6 seconds. CPU system time: 3 seconds. Elapsed time: 21.154 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.691 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.626 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 28 seconds. CPU system time: 4 seconds. Elapsed time: 59.858 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 32 seconds. Total CPU system time: 6 seconds. Total elapsed time: 63.289 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.183 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.428 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.24 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<7, false>::ap_int_base<6, false>(ap_int_base<6, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<7>::ap_uint<7, false>(ap_int_base<7, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<7, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<6, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint<6, false>(ap_int_base<6, false> const&)' into 'ap_int_base<6, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<6, false>& ap_int_base<6, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<6, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<6, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<6, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:50)
INFO: [HLS 214-131] Inlining function 'bool operator><6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint<7>(ap_uint<7> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<6, false>::RType<1, false>::plus operator+<6, false, 1, false>(ap_int_base<6, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<6, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<6, false>(ap_int_base<6, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:45)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:41)
INFO: [HLS 214-131] Inlining function 'ap_uint<6>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_53_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:53:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_53_3' (FAST/solution1/fast.cpp:53:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:20:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_23_1'(FAST/solution1/fast.cpp:23:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:23:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 7.294 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.111 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 1.256 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:20) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:20:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.602 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:25:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.409 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.867 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.353 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.304 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.322 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_28_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.241 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 2 seconds. Elapsed time: 4.966 seconds; current allocated memory: 1.256 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.209 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.985 seconds; current allocated memory: 1.256 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 2 seconds. Elapsed time: 37.242 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 5 seconds. Total elapsed time: 43.666 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.532 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 3 seconds. Total elapsed time: 7.421 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.359 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 8.453 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.018 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.584 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:64:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_53_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:53:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_53_3' (FAST/solution1/fast.cpp:53:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:20:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_23_1'(FAST/solution1/fast.cpp:23:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:23:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.234 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:20) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:20:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:25:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.428 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_28_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 3.915 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.311 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.357 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.324 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_28_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_28_2' pipeline 'VITIS_LOOP_28_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_28_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_28_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.27 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.745 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.258 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.001 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 21 seconds. CPU system time: 3 seconds. Elapsed time: 36.421 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 25 seconds. Total CPU system time: 5 seconds. Total elapsed time: 39.863 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.948 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_52_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_52_3' (FAST/solution1/fast.cpp:52:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:19:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_22_1'(FAST/solution1/fast.cpp:22:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:22:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.241 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.105 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.139 seconds; current allocated memory: 1.253 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:19) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:19:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.777 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:24:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.765 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_22_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_22_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.061 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_27_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.277 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 6.862 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.102 seconds; current allocated memory: 1.253 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.598 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_22_1' pipeline 'VITIS_LOOP_22_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_22_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.71 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_27_2' pipeline 'VITIS_LOOP_27_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_27_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_27_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.276 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 6 seconds. CPU system time: 2 seconds. Elapsed time: 9.59 seconds; current allocated memory: 1.253 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.62 seconds; current allocated memory: 1.253 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.085 seconds; current allocated memory: 1.253 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 30 seconds. CPU system time: 4 seconds. Elapsed time: 59.677 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 38 seconds. Total CPU system time: 7 seconds. Total elapsed time: 70.27 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 91.687 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 96.469 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 7ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 7 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.935 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_52_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_52_3' (FAST/solution1/fast.cpp:52:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:19:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_22_1'(FAST/solution1/fast.cpp:22:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:22:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 7.865 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.225 seconds; current allocated memory: 1.256 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:19) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:19:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.678 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:24:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.546 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_22_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_22_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.877 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.126 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 50, loop 'VITIS_LOOP_27_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.126 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.585 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.244 seconds; current allocated memory: 1.256 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.321 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_22_1' pipeline 'VITIS_LOOP_22_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_22_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.875 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_27_2' pipeline 'VITIS_LOOP_27_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_27_2' is 10527 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_5_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_27_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.535 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 5.175 seconds; current allocated memory: 1.256 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.217 seconds; current allocated memory: 1.256 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.054 seconds; current allocated memory: 1.256 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 195.69 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 2 seconds. Elapsed time: 40.786 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 4 seconds. Total elapsed time: 44.572 seconds; peak allocated memory: 1.256 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 7ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 7 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 66.816 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 10 seconds. Total CPU system time: 3 seconds. Total elapsed time: 72.335 seconds; peak allocated memory: 1.253 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 3ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 3 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.715 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_52_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_52_3' (FAST/solution1/fast.cpp:52:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:19:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_22_1'(FAST/solution1/fast.cpp:22:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:22:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 7.761 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.127 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.188 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:19) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:19:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.637 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:24:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.507 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_22_1'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_22_1' (loop 'VITIS_LOOP_22_1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation ('phi_mul_write_ln24', FAST/solution1/fast.cpp:24) of variable 'add_ln24', FAST/solution1/fast.cpp:24 on local variable 'phi_mul' and 'load' operation ('phi_mul_load', FAST/solution1/fast.cpp:24) on local variable 'phi_mul'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_22_1' (loop 'VITIS_LOOP_22_1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation ('phi_urem_write_ln22', FAST/solution1/fast.cpp:22) of variable 'select_ln22', FAST/solution1/fast.cpp:22 on local variable 'phi_urem' and 'load' operation ('phi_urem_load_1', FAST/solution1/fast.cpp:22) on local variable 'phi_urem'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 4, loop 'VITIS_LOOP_22_1'
WARNING: [HLS 200-871] Estimated clock period (2.31925ns) exceeds the target (target clock period: 3ns, clock uncertainty: 0.81ns, effective delay budget: 2.19ns).
WARNING: [HLS 200-1016] The critical path in module 'fast_accel_Pipeline_VITIS_LOOP_22_1' consists of the following:	'alloca' operation ('i.V') [32]  (0 ns)
	'load' operation ('i.V') on local variable 'i.V' [40]  (0 ns)
	'icmp' operation ('icmp_ln1072') [43]  (2.32 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.009 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
WARNING: [HLS 200-1015] Estimated delay Estimated delay (4.37ns)  of 'urem' operation ('urem_ln232') exceeds the target cycle time (target cycle time: 3ns, clock uncertainty: 0.81ns, effective cycle time: 2.19ns).

INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_2'.
WARNING: [HLS 200-880] The II Violation in module 'fast_accel_Pipeline_VITIS_LOOP_27_2' (loop 'VITIS_LOOP_27_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation ('lhs_V_write_ln27', FAST/solution1/fast.cpp:27) of variable 'i.V' on local variable 'lhs.V' and 'load' operation ('i.V') on local variable 'lhs.V'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 57, loop 'VITIS_LOOP_27_2'
WARNING: [HLS 200-871] Estimated clock period (4.36525ns) exceeds the target (target clock period: 3ns, clock uncertainty: 0.81ns, effective delay budget: 2.19ns).
WARNING: [HLS 200-1016] The critical path in module 'fast_accel_Pipeline_VITIS_LOOP_27_2' consists of the following:	'urem' operation ('urem_ln232_4') [683]  (4.37 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.091 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.834 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.315 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.5 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_22_1' pipeline 'VITIS_LOOP_22_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Generating core module 'add_30ns_30ns_30_2_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_22_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.777 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_27_2' pipeline 'VITIS_LOOP_27_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'add_14ns_14ns_14_1_1': 10 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_15ns_15s_15_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_2ns_2ns_2_1_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_3ns_3ns_3_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_4ns_4ns_4_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_5ns_5ns_5_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'add_64ns_64ns_64_3_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_5_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'sub_9ns_9ns_9_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_27_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.543 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 2 seconds. Elapsed time: 5.309 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-283] Generating pipelined adder/subtractor : 'fast_accel_add_30ns_30ns_30_2_1_Adder_0'
INFO: [RTMG 210-283] Generating pipelined adder/subtractor : 'fast_accel_add_64ns_64ns_64_3_1_Adder_1'
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_2R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_2R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.052 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.081 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 229.08 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 21 seconds. CPU system time: 3 seconds. Elapsed time: 40.838 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 26 seconds. Total CPU system time: 5 seconds. Total elapsed time: 44.529 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.762 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:63:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_52_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_52_3' (FAST/solution1/fast.cpp:52:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:9:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:19:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_22_1'(FAST/solution1/fast.cpp:22:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:22:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.661 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:19) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:19:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.639 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:24:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.535 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_22_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_22_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.843 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.148 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_27_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.864 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.407 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.125 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.298 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_22_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_22_1' pipeline 'VITIS_LOOP_22_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_22_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_22_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.534 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_27_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_27_2' pipeline 'VITIS_LOOP_27_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_27_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_27_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.38 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.826 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 3.054 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.059 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 3 seconds. Elapsed time: 41.645 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 5 seconds. Total elapsed time: 45.262 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.197 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 3 seconds. Total elapsed time: 12.135 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.026 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.918 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:15:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:60:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:58:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_50_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:50:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_50_3' (FAST/solution1/fast.cpp:50:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:17:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_20_1'(FAST/solution1/fast.cpp:20:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:20:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 7.928 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:17) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:17:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.708 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:22:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.583 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_20_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.935 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_25_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_25_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.183 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.194 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.121 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.362 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_20_1' pipeline 'VITIS_LOOP_20_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_20_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.964 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_25_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_25_2' pipeline 'VITIS_LOOP_25_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_25_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_25_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.8 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.892 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.425 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.137 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 23 seconds. CPU system time: 2 seconds. Elapsed time: 45.88 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 30 seconds. Total CPU system time: 5 seconds. Total elapsed time: 51.683 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 85.459 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 91.004 seconds; peak allocated memory: 1.251 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.023 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
WARNING: [HLS 207-5558] Array_Partition/Array_Reshape pragma is ignored, because variable is scalar type  (FAST/solution1/fast.cpp:22:38)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.129 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:15:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_51_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:51:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_51_3' (FAST/solution1/fast.cpp:51:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:17:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_20_1'(FAST/solution1/fast.cpp:20:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:20:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 11.161 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.126 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:17) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:17:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.983 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:23:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.478 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_20_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.218 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.196 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_26_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.12 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.921 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.28 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.326 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_20_1' pipeline 'VITIS_LOOP_20_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_20_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.921 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_26_2' pipeline 'VITIS_LOOP_26_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_26_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_26_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.161 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 7.484 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.573 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.151 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 27 seconds. CPU system time: 3 seconds. Elapsed time: 51.712 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 32 seconds. Total CPU system time: 6 seconds. Total elapsed time: 56.878 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.027 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.691 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:15:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:62:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:59:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:53:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:14)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:18:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_51_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:51:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_51_3' (FAST/solution1/fast.cpp:51:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:7:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:17:11)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_20_1'(FAST/solution1/fast.cpp:20:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:20:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 8.02 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.153 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.207 seconds; current allocated memory: 1.250 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:17) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:17:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.767 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:23:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.813 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_20_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.009 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.175 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_26_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.638 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 6.069 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.987 seconds; current allocated memory: 1.250 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.525 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_20_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_20_1' pipeline 'VITIS_LOOP_20_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_20_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_20_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.396 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_26_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_26_2' pipeline 'VITIS_LOOP_26_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_26_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_26_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.068 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 2 seconds. Elapsed time: 6.345 seconds; current allocated memory: 1.250 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.951 seconds; current allocated memory: 1.250 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.449 seconds; current allocated memory: 1.250 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 29 seconds. CPU system time: 3 seconds. Elapsed time: 50.585 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 36 seconds. Total CPU system time: 6 seconds. Total elapsed time: 58.084 seconds; peak allocated memory: 1.250 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design -wave_debug -trace_level all 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 370.989 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 3 seconds. Total elapsed time: 376.867 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.678 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 2 seconds. Total elapsed time: 12.348 seconds; peak allocated memory: 1.252 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.107 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:12:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:23)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_44_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:44:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_44_3' (FAST/solution1/fast.cpp:44:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:11:8)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_14_1'(FAST/solution1/fast.cpp:14:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:14:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.722 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.304 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:11) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:11:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.65 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:16:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.764 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_14_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_14_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.224 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.168 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_19_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_19_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 3.712 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.335 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.055 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.289 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_14_1' pipeline 'VITIS_LOOP_14_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_14_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.854 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_19_2' pipeline 'VITIS_LOOP_19_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_19_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_19_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.346 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.859 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.334 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.218 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 3 seconds. Elapsed time: 41.341 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 26 seconds. Total CPU system time: 5 seconds. Total elapsed time: 44.811 seconds; peak allocated memory: 1.255 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design -wave_debug -trace_level all 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 20.015 seconds; current allocated memory: 2.121 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 23.416 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.021 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.229 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:12:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:23)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_44_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:44:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_44_3' (FAST/solution1/fast.cpp:44:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:11:8)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_14_1'(FAST/solution1/fast.cpp:14:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:14:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 7.935 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.182 seconds; current allocated memory: 1.254 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:11) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:11:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.617 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:16:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.498 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_14_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_14_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.796 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.964 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_19_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_19_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.654 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.309 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.016 seconds; current allocated memory: 1.254 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_14_1' pipeline 'VITIS_LOOP_14_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_14_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.852 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_19_2' pipeline 'VITIS_LOOP_19_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_19_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_19_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.184 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.439 seconds; current allocated memory: 1.254 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.133 seconds; current allocated memory: 1.254 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.025 seconds; current allocated memory: 1.254 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 3 seconds. Elapsed time: 41.465 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 28 seconds. Total CPU system time: 5 seconds. Total elapsed time: 45.972 seconds; peak allocated memory: 1.254 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: cosim_design -wave_debug -trace_level all 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 5472.02 seconds; current allocated memory: 2.137 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 3 seconds. Total elapsed time: 5475.74 seconds; peak allocated memory: 1.257 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 1.233 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.871 seconds; current allocated memory: 1.233 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
ERROR: [HLS 214-274] In 'VITIS_LOOP_20_2', Pragma conflict happens on 'UNROLL' and 'PIPELINE' pragmas: Complete unroll will break the target of other loop pragmas (FAST/solution1/fast.cpp:20:22)
ERROR: [HLS 214-274] In 'VITIS_LOOP_14_1', Pragma conflict happens on 'UNROLL' and 'PIPELINE' pragmas: Complete unroll will break the target of other loop pragmas (FAST/solution1/fast.cpp:14:22)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.816 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 2 seconds. Total elapsed time: 25.881 seconds; peak allocated memory: 1.233 GB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.276 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:12:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:57:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:56:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:48:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:47:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:42:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:41:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:17:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:20:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:24:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -version=2.0.1
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -version 2.0.1 
INFO: [HLS 200-1510] Running: set_directive_top -name fast_accel fast_accel 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.019 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Analyzing design file 'FAST/solution1/fast.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.961 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<16, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1558:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2052)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2050)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1559:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2573)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:2571)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341)
INFO: [HLS 214-131] Inlining function 'ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const' into 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:337)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const' into 'bool operator><8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:335)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::ap_int_base(int)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:925:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)' into 'ap_int_base<8, false>::operator++(int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1093)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const' into 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' (E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1090)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:12:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:55)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:55:18)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:54:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:52:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:50:26)
INFO: [HLS 214-131] Inlining function 'bool operator>=<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:49:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:49)
INFO: [HLS 214-131] Inlining function 'bool operator><8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:24)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:46:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<9>(ap_uint<9> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:16)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(ap_int_base<8, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:44)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:44:40)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:40:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:20)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:39:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:38:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:16:6)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:37:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator++(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:14:53)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:36:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:35:30)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:19)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:19:46)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:34:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::operator unsigned long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:21:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:33:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:32:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<17>(ap_int<17> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:22:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:31:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:30:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:19)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<16>(ap_uint<16> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:23:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:29:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:28:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:27:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:26:29)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(bool)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:19)
INFO: [HLS 214-131] Inlining function 'ap_int_base<9, true>::operator long long() const' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:25:23)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_44_3' is marked as complete unroll implied by the pipeline pragma (FAST/solution1/fast.cpp:44:26)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_44_3' (FAST/solution1/fast.cpp:44:26) in function 'fast_accel' completely with a factor of 16 (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::abs(long long)' into 'fast_accel(ap_uint<8>*, int, ap_uint<8>*, int, int)' (FAST/solution1/fast.cpp:4:0)
INFO: [HLS 214-241] Aggregating maxi variable 'img_out' with compact=none mode in 8-bits
INFO: [HLS 214-241] Aggregating maxi variable 'img_in' with compact=none mode in 8-bits
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-270] Inferring cyclic partitioning for array 'IMG' on dimension 1 with factor 27 (FAST/solution1/fast.cpp:11:8)
INFO: [HLS 214-115] Multiple burst reads of length 16384 and bit width 8 in loop 'VITIS_LOOP_14_1'(FAST/solution1/fast.cpp:14:22) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (FAST/solution1/fast.cpp:14:22)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 7.678 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 1.255 GB.
INFO: [XFORM 203-101] Partitioning array 'IMG.V' (FAST/solution1/fast.cpp:11) in dimension 1 with a cyclic factor 27.
INFO: [XFORM 203-11] Balancing expressions in function 'fast_accel' (FAST/solution1/fast.cpp:11:22)...15 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.001 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-472] Inferring partial write operation for 'IMG.V[0]' (FAST/solution1/fast.cpp:16:9)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.703 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'fast_accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_14_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_14_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.41 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'IMG_V_25'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_19_2'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 47, loop 'VITIS_LOOP_19_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.058 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 3.477 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.965 seconds; current allocated memory: 1.255 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.315 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_14_1' pipeline 'VITIS_LOOP_14_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'fast_accel_Pipeline_VITIS_LOOP_14_1/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_14_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.678 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel_Pipeline_VITIS_LOOP_19_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fast_accel_Pipeline_VITIS_LOOP_19_2' pipeline 'VITIS_LOOP_19_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'fast_accel_Pipeline_VITIS_LOOP_19_2' is 10727 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mul_33ns_35ns_67_2_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_14ns_15ns_29_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_14ns_6ns_5_18_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_33s_6ns_5_37_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel_Pipeline_VITIS_LOOP_19_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.94 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fast_accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/threshold' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/img_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/rows' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'fast_accel/cols' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'fast_accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'img_in', 'threshold', 'img_out', 'rows', 'cols' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'fast_accel'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.441 seconds; current allocated memory: 1.255 GB.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_0_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'fast_accel_IMG_V_22_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.699 seconds; current allocated memory: 1.255 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.621 seconds; current allocated memory: 1.255 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for fast_accel.
INFO: [VLOG 209-307] Generating Verilog RTL for fast_accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 2 seconds. Elapsed time: 46.647 seconds; current allocated memory: 0.000 MB.
INFO: [HLS 200-112] Total CPU user time: 29 seconds. Total CPU system time: 5 seconds. Total elapsed time: 53.395 seconds; peak allocated memory: 1.255 GB.
