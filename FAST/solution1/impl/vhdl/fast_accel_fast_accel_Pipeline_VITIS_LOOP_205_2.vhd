-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fast_accel_fast_accel_Pipeline_VITIS_LOOP_205_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    img_in : IN STD_LOGIC_VECTOR (63 downto 0);
    IMG_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce0 : OUT STD_LOGIC;
    IMG_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce1 : OUT STD_LOGIC;
    IMG_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce2 : OUT STD_LOGIC;
    IMG_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce3 : OUT STD_LOGIC;
    IMG_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce4 : OUT STD_LOGIC;
    IMG_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce5 : OUT STD_LOGIC;
    IMG_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce6 : OUT STD_LOGIC;
    IMG_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce7 : OUT STD_LOGIC;
    IMG_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce8 : OUT STD_LOGIC;
    IMG_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce9 : OUT STD_LOGIC;
    IMG_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce10 : OUT STD_LOGIC;
    IMG_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce11 : OUT STD_LOGIC;
    IMG_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce12 : OUT STD_LOGIC;
    IMG_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce13 : OUT STD_LOGIC;
    IMG_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce14 : OUT STD_LOGIC;
    IMG_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    IMG_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
    IMG_ce15 : OUT STD_LOGIC;
    IMG_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold : IN STD_LOGIC_VECTOR (31 downto 0);
    img_out : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of fast_accel_fast_accel_Pipeline_VITIS_LOOP_205_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_183 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000011";
    constant ap_const_lv32_3E7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011111001111101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv14_3E80 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000000";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_180 : STD_LOGIC_VECTOR (13 downto 0) := "00000110000000";
    constant ap_const_lv14_3FFD : STD_LOGIC_VECTOR (13 downto 0) := "11111111111101";
    constant ap_const_lv14_3E81 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000001";
    constant ap_const_lv14_3F02 : STD_LOGIC_VECTOR (13 downto 0) := "11111100000010";
    constant ap_const_lv14_3F83 : STD_LOGIC_VECTOR (13 downto 0) := "11111110000011";
    constant ap_const_lv14_83 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000011";
    constant ap_const_lv14_102 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000010";
    constant ap_const_lv14_181 : STD_LOGIC_VECTOR (13 downto 0) := "00000110000001";
    constant ap_const_lv14_17F : STD_LOGIC_VECTOR (13 downto 0) := "00000101111111";
    constant ap_const_lv14_FE : STD_LOGIC_VECTOR (13 downto 0) := "00000011111110";
    constant ap_const_lv14_7D : STD_LOGIC_VECTOR (13 downto 0) := "00000001111101";
    constant ap_const_lv14_3F7D : STD_LOGIC_VECTOR (13 downto 0) := "11111101111101";
    constant ap_const_lv14_3EFE : STD_LOGIC_VECTOR (13 downto 0) := "11111011111110";
    constant ap_const_lv14_3E7F : STD_LOGIC_VECTOR (13 downto 0) := "11111001111111";
    constant ap_const_lv8_7C : STD_LOGIC_VECTOR (7 downto 0) := "01111100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln205_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal gmem_addr_reg_1455 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1541_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal IMG_load_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_reg_1547_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_1_reg_1552_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_2_reg_1557_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_3_reg_1562_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_4_reg_1567_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_5_reg_1572_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_6_reg_1577_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_7_reg_1582_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_8_reg_1587_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_9_reg_1592_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_10_reg_1597_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_11_reg_1602_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_12_reg_1607_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_13_reg_1612_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_14_reg_1617_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG_load_15_reg_1622_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal pixel_in_reg_1627 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln230_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln230_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_16_fu_1101_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_16_reg_1652 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln260_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln260_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln265_reg_1663 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln270_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln270_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln275_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln275_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln280_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln280_reg_1678 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_reg_1683 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln290_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln290_reg_1688 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln298_fu_1416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln298_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln210_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln240_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln245_fu_555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln250_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_fu_577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln260_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_fu_599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln270_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln275_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln285_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln290_fu_654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln207_1_fu_429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln298_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal i_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_401_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln207_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln207_fu_413_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_419_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_fu_387_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln209_fu_447_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_and_t_cast_fu_453_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln209_1_fu_461_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_467_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_19_fu_397_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln210_fu_483_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln215_fu_494_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln220_fu_505_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln225_fu_516_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln235_fu_527_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln240_fu_538_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln245_fu_549_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln250_fu_560_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln255_fu_571_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln260_fu_582_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln265_fu_593_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln270_fu_604_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln275_fu_615_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln280_fu_626_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln285_fu_637_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln290_fu_648_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln296_fu_659_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_665_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln209_fu_475_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln300_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_fu_697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln210_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_fu_732_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln215_fu_749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond2_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg1_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs3_fu_765_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln215_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_1_fu_778_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln198_fu_745_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln220_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond5_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg4_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs6_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_2_fu_786_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln220_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_3_fu_823_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal key_num_4_fu_829_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln225_fu_841_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond8_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg7_fu_845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs9_fu_857_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln198_1_fu_837_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln225_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_5_fu_870_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal key_num_6_fu_876_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln235_fu_890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond11_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg10_fu_894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs12_fu_906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln235_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_7_fu_919_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln240_fu_933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond14_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg13_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs15_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_8_fu_925_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln240_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_9_fu_962_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln245_fu_976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond17_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg16_fu_980_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs18_fu_992_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_10_fu_968_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln245_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_11_fu_1005_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal key_num_12_fu_1011_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln250_fu_1023_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond20_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg19_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs21_fu_1039_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln198_2_fu_1019_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln250_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_13_fu_1052_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln255_fu_1066_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond23_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg22_fu_1070_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs24_fu_1082_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_14_fu_1058_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln255_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal key_num_15_fu_1095_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln260_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond26_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg25_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs27_fu_1125_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln265_fu_1138_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond29_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg28_fu_1142_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs30_fu_1154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln270_fu_1167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond32_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg31_fu_1171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs33_fu_1183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln275_fu_1196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond35_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg34_fu_1200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs36_fu_1212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln280_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond38_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg37_fu_1229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs39_fu_1241_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln285_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond41_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg40_fu_1258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs42_fu_1270_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln290_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond44_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg43_fu_1287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs45_fu_1299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal key_num_17_fu_1312_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_18_fu_1317_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_19_fu_1323_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_20_fu_1329_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_21_fu_1336_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_22_fu_1342_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_23_fu_1349_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_24_fu_1355_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_25_fu_1362_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_26_fu_1368_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_27_fu_1375_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal key_num_28_fu_1381_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln198_3_fu_1388_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal key_num_29_fu_1392_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal key_num_30_fu_1398_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln295_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln295_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fast_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component fast_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln205_fu_391_p2 = ap_const_lv1_1))) then 
                    i_fu_136 <= i_7_fu_705_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_136 <= ap_const_lv32_183;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                IMG_load_10_reg_1597 <= IMG_q5;
                IMG_load_11_reg_1602 <= IMG_q4;
                IMG_load_12_reg_1607 <= IMG_q3;
                IMG_load_13_reg_1612 <= IMG_q2;
                IMG_load_14_reg_1617 <= IMG_q1;
                IMG_load_15_reg_1622 <= IMG_q0;
                IMG_load_1_reg_1552 <= IMG_q14;
                IMG_load_2_reg_1557 <= IMG_q13;
                IMG_load_3_reg_1562 <= IMG_q12;
                IMG_load_4_reg_1567 <= IMG_q11;
                IMG_load_5_reg_1572 <= IMG_q10;
                IMG_load_6_reg_1577 <= IMG_q9;
                IMG_load_7_reg_1582 <= IMG_q8;
                IMG_load_8_reg_1587 <= IMG_q7;
                IMG_load_9_reg_1592 <= IMG_q6;
                IMG_load_reg_1547 <= IMG_q15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                IMG_load_10_reg_1597_pp0_iter2_reg <= IMG_load_10_reg_1597;
                IMG_load_10_reg_1597_pp0_iter3_reg <= IMG_load_10_reg_1597_pp0_iter2_reg;
                IMG_load_10_reg_1597_pp0_iter4_reg <= IMG_load_10_reg_1597_pp0_iter3_reg;
                IMG_load_10_reg_1597_pp0_iter5_reg <= IMG_load_10_reg_1597_pp0_iter4_reg;
                IMG_load_10_reg_1597_pp0_iter6_reg <= IMG_load_10_reg_1597_pp0_iter5_reg;
                IMG_load_10_reg_1597_pp0_iter7_reg <= IMG_load_10_reg_1597_pp0_iter6_reg;
                IMG_load_10_reg_1597_pp0_iter8_reg <= IMG_load_10_reg_1597_pp0_iter7_reg;
                IMG_load_11_reg_1602_pp0_iter2_reg <= IMG_load_11_reg_1602;
                IMG_load_11_reg_1602_pp0_iter3_reg <= IMG_load_11_reg_1602_pp0_iter2_reg;
                IMG_load_11_reg_1602_pp0_iter4_reg <= IMG_load_11_reg_1602_pp0_iter3_reg;
                IMG_load_11_reg_1602_pp0_iter5_reg <= IMG_load_11_reg_1602_pp0_iter4_reg;
                IMG_load_11_reg_1602_pp0_iter6_reg <= IMG_load_11_reg_1602_pp0_iter5_reg;
                IMG_load_11_reg_1602_pp0_iter7_reg <= IMG_load_11_reg_1602_pp0_iter6_reg;
                IMG_load_11_reg_1602_pp0_iter8_reg <= IMG_load_11_reg_1602_pp0_iter7_reg;
                IMG_load_12_reg_1607_pp0_iter2_reg <= IMG_load_12_reg_1607;
                IMG_load_12_reg_1607_pp0_iter3_reg <= IMG_load_12_reg_1607_pp0_iter2_reg;
                IMG_load_12_reg_1607_pp0_iter4_reg <= IMG_load_12_reg_1607_pp0_iter3_reg;
                IMG_load_12_reg_1607_pp0_iter5_reg <= IMG_load_12_reg_1607_pp0_iter4_reg;
                IMG_load_12_reg_1607_pp0_iter6_reg <= IMG_load_12_reg_1607_pp0_iter5_reg;
                IMG_load_12_reg_1607_pp0_iter7_reg <= IMG_load_12_reg_1607_pp0_iter6_reg;
                IMG_load_12_reg_1607_pp0_iter8_reg <= IMG_load_12_reg_1607_pp0_iter7_reg;
                IMG_load_13_reg_1612_pp0_iter2_reg <= IMG_load_13_reg_1612;
                IMG_load_13_reg_1612_pp0_iter3_reg <= IMG_load_13_reg_1612_pp0_iter2_reg;
                IMG_load_13_reg_1612_pp0_iter4_reg <= IMG_load_13_reg_1612_pp0_iter3_reg;
                IMG_load_13_reg_1612_pp0_iter5_reg <= IMG_load_13_reg_1612_pp0_iter4_reg;
                IMG_load_13_reg_1612_pp0_iter6_reg <= IMG_load_13_reg_1612_pp0_iter5_reg;
                IMG_load_13_reg_1612_pp0_iter7_reg <= IMG_load_13_reg_1612_pp0_iter6_reg;
                IMG_load_13_reg_1612_pp0_iter8_reg <= IMG_load_13_reg_1612_pp0_iter7_reg;
                IMG_load_14_reg_1617_pp0_iter2_reg <= IMG_load_14_reg_1617;
                IMG_load_14_reg_1617_pp0_iter3_reg <= IMG_load_14_reg_1617_pp0_iter2_reg;
                IMG_load_14_reg_1617_pp0_iter4_reg <= IMG_load_14_reg_1617_pp0_iter3_reg;
                IMG_load_14_reg_1617_pp0_iter5_reg <= IMG_load_14_reg_1617_pp0_iter4_reg;
                IMG_load_14_reg_1617_pp0_iter6_reg <= IMG_load_14_reg_1617_pp0_iter5_reg;
                IMG_load_14_reg_1617_pp0_iter7_reg <= IMG_load_14_reg_1617_pp0_iter6_reg;
                IMG_load_14_reg_1617_pp0_iter8_reg <= IMG_load_14_reg_1617_pp0_iter7_reg;
                IMG_load_15_reg_1622_pp0_iter2_reg <= IMG_load_15_reg_1622;
                IMG_load_15_reg_1622_pp0_iter3_reg <= IMG_load_15_reg_1622_pp0_iter2_reg;
                IMG_load_15_reg_1622_pp0_iter4_reg <= IMG_load_15_reg_1622_pp0_iter3_reg;
                IMG_load_15_reg_1622_pp0_iter5_reg <= IMG_load_15_reg_1622_pp0_iter4_reg;
                IMG_load_15_reg_1622_pp0_iter6_reg <= IMG_load_15_reg_1622_pp0_iter5_reg;
                IMG_load_15_reg_1622_pp0_iter7_reg <= IMG_load_15_reg_1622_pp0_iter6_reg;
                IMG_load_15_reg_1622_pp0_iter8_reg <= IMG_load_15_reg_1622_pp0_iter7_reg;
                IMG_load_1_reg_1552_pp0_iter2_reg <= IMG_load_1_reg_1552;
                IMG_load_1_reg_1552_pp0_iter3_reg <= IMG_load_1_reg_1552_pp0_iter2_reg;
                IMG_load_1_reg_1552_pp0_iter4_reg <= IMG_load_1_reg_1552_pp0_iter3_reg;
                IMG_load_1_reg_1552_pp0_iter5_reg <= IMG_load_1_reg_1552_pp0_iter4_reg;
                IMG_load_1_reg_1552_pp0_iter6_reg <= IMG_load_1_reg_1552_pp0_iter5_reg;
                IMG_load_1_reg_1552_pp0_iter7_reg <= IMG_load_1_reg_1552_pp0_iter6_reg;
                IMG_load_1_reg_1552_pp0_iter8_reg <= IMG_load_1_reg_1552_pp0_iter7_reg;
                IMG_load_2_reg_1557_pp0_iter2_reg <= IMG_load_2_reg_1557;
                IMG_load_2_reg_1557_pp0_iter3_reg <= IMG_load_2_reg_1557_pp0_iter2_reg;
                IMG_load_2_reg_1557_pp0_iter4_reg <= IMG_load_2_reg_1557_pp0_iter3_reg;
                IMG_load_2_reg_1557_pp0_iter5_reg <= IMG_load_2_reg_1557_pp0_iter4_reg;
                IMG_load_2_reg_1557_pp0_iter6_reg <= IMG_load_2_reg_1557_pp0_iter5_reg;
                IMG_load_2_reg_1557_pp0_iter7_reg <= IMG_load_2_reg_1557_pp0_iter6_reg;
                IMG_load_2_reg_1557_pp0_iter8_reg <= IMG_load_2_reg_1557_pp0_iter7_reg;
                IMG_load_3_reg_1562_pp0_iter2_reg <= IMG_load_3_reg_1562;
                IMG_load_3_reg_1562_pp0_iter3_reg <= IMG_load_3_reg_1562_pp0_iter2_reg;
                IMG_load_3_reg_1562_pp0_iter4_reg <= IMG_load_3_reg_1562_pp0_iter3_reg;
                IMG_load_3_reg_1562_pp0_iter5_reg <= IMG_load_3_reg_1562_pp0_iter4_reg;
                IMG_load_3_reg_1562_pp0_iter6_reg <= IMG_load_3_reg_1562_pp0_iter5_reg;
                IMG_load_3_reg_1562_pp0_iter7_reg <= IMG_load_3_reg_1562_pp0_iter6_reg;
                IMG_load_3_reg_1562_pp0_iter8_reg <= IMG_load_3_reg_1562_pp0_iter7_reg;
                IMG_load_4_reg_1567_pp0_iter2_reg <= IMG_load_4_reg_1567;
                IMG_load_4_reg_1567_pp0_iter3_reg <= IMG_load_4_reg_1567_pp0_iter2_reg;
                IMG_load_4_reg_1567_pp0_iter4_reg <= IMG_load_4_reg_1567_pp0_iter3_reg;
                IMG_load_4_reg_1567_pp0_iter5_reg <= IMG_load_4_reg_1567_pp0_iter4_reg;
                IMG_load_4_reg_1567_pp0_iter6_reg <= IMG_load_4_reg_1567_pp0_iter5_reg;
                IMG_load_4_reg_1567_pp0_iter7_reg <= IMG_load_4_reg_1567_pp0_iter6_reg;
                IMG_load_4_reg_1567_pp0_iter8_reg <= IMG_load_4_reg_1567_pp0_iter7_reg;
                IMG_load_5_reg_1572_pp0_iter2_reg <= IMG_load_5_reg_1572;
                IMG_load_5_reg_1572_pp0_iter3_reg <= IMG_load_5_reg_1572_pp0_iter2_reg;
                IMG_load_5_reg_1572_pp0_iter4_reg <= IMG_load_5_reg_1572_pp0_iter3_reg;
                IMG_load_5_reg_1572_pp0_iter5_reg <= IMG_load_5_reg_1572_pp0_iter4_reg;
                IMG_load_5_reg_1572_pp0_iter6_reg <= IMG_load_5_reg_1572_pp0_iter5_reg;
                IMG_load_5_reg_1572_pp0_iter7_reg <= IMG_load_5_reg_1572_pp0_iter6_reg;
                IMG_load_5_reg_1572_pp0_iter8_reg <= IMG_load_5_reg_1572_pp0_iter7_reg;
                IMG_load_6_reg_1577_pp0_iter2_reg <= IMG_load_6_reg_1577;
                IMG_load_6_reg_1577_pp0_iter3_reg <= IMG_load_6_reg_1577_pp0_iter2_reg;
                IMG_load_6_reg_1577_pp0_iter4_reg <= IMG_load_6_reg_1577_pp0_iter3_reg;
                IMG_load_6_reg_1577_pp0_iter5_reg <= IMG_load_6_reg_1577_pp0_iter4_reg;
                IMG_load_6_reg_1577_pp0_iter6_reg <= IMG_load_6_reg_1577_pp0_iter5_reg;
                IMG_load_6_reg_1577_pp0_iter7_reg <= IMG_load_6_reg_1577_pp0_iter6_reg;
                IMG_load_6_reg_1577_pp0_iter8_reg <= IMG_load_6_reg_1577_pp0_iter7_reg;
                IMG_load_7_reg_1582_pp0_iter2_reg <= IMG_load_7_reg_1582;
                IMG_load_7_reg_1582_pp0_iter3_reg <= IMG_load_7_reg_1582_pp0_iter2_reg;
                IMG_load_7_reg_1582_pp0_iter4_reg <= IMG_load_7_reg_1582_pp0_iter3_reg;
                IMG_load_7_reg_1582_pp0_iter5_reg <= IMG_load_7_reg_1582_pp0_iter4_reg;
                IMG_load_7_reg_1582_pp0_iter6_reg <= IMG_load_7_reg_1582_pp0_iter5_reg;
                IMG_load_7_reg_1582_pp0_iter7_reg <= IMG_load_7_reg_1582_pp0_iter6_reg;
                IMG_load_7_reg_1582_pp0_iter8_reg <= IMG_load_7_reg_1582_pp0_iter7_reg;
                IMG_load_8_reg_1587_pp0_iter2_reg <= IMG_load_8_reg_1587;
                IMG_load_8_reg_1587_pp0_iter3_reg <= IMG_load_8_reg_1587_pp0_iter2_reg;
                IMG_load_8_reg_1587_pp0_iter4_reg <= IMG_load_8_reg_1587_pp0_iter3_reg;
                IMG_load_8_reg_1587_pp0_iter5_reg <= IMG_load_8_reg_1587_pp0_iter4_reg;
                IMG_load_8_reg_1587_pp0_iter6_reg <= IMG_load_8_reg_1587_pp0_iter5_reg;
                IMG_load_8_reg_1587_pp0_iter7_reg <= IMG_load_8_reg_1587_pp0_iter6_reg;
                IMG_load_8_reg_1587_pp0_iter8_reg <= IMG_load_8_reg_1587_pp0_iter7_reg;
                IMG_load_9_reg_1592_pp0_iter2_reg <= IMG_load_9_reg_1592;
                IMG_load_9_reg_1592_pp0_iter3_reg <= IMG_load_9_reg_1592_pp0_iter2_reg;
                IMG_load_9_reg_1592_pp0_iter4_reg <= IMG_load_9_reg_1592_pp0_iter3_reg;
                IMG_load_9_reg_1592_pp0_iter5_reg <= IMG_load_9_reg_1592_pp0_iter4_reg;
                IMG_load_9_reg_1592_pp0_iter6_reg <= IMG_load_9_reg_1592_pp0_iter5_reg;
                IMG_load_9_reg_1592_pp0_iter7_reg <= IMG_load_9_reg_1592_pp0_iter6_reg;
                IMG_load_9_reg_1592_pp0_iter8_reg <= IMG_load_9_reg_1592_pp0_iter7_reg;
                IMG_load_reg_1547_pp0_iter2_reg <= IMG_load_reg_1547;
                IMG_load_reg_1547_pp0_iter3_reg <= IMG_load_reg_1547_pp0_iter2_reg;
                IMG_load_reg_1547_pp0_iter4_reg <= IMG_load_reg_1547_pp0_iter3_reg;
                IMG_load_reg_1547_pp0_iter5_reg <= IMG_load_reg_1547_pp0_iter4_reg;
                IMG_load_reg_1547_pp0_iter6_reg <= IMG_load_reg_1547_pp0_iter5_reg;
                IMG_load_reg_1547_pp0_iter7_reg <= IMG_load_reg_1547_pp0_iter6_reg;
                IMG_load_reg_1547_pp0_iter8_reg <= IMG_load_reg_1547_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                gmem_addr_1_reg_1541_pp0_iter2_reg <= gmem_addr_1_reg_1541_pp0_iter1_reg;
                gmem_addr_1_reg_1541_pp0_iter3_reg <= gmem_addr_1_reg_1541_pp0_iter2_reg;
                gmem_addr_1_reg_1541_pp0_iter4_reg <= gmem_addr_1_reg_1541_pp0_iter3_reg;
                gmem_addr_1_reg_1541_pp0_iter5_reg <= gmem_addr_1_reg_1541_pp0_iter4_reg;
                gmem_addr_1_reg_1541_pp0_iter6_reg <= gmem_addr_1_reg_1541_pp0_iter5_reg;
                gmem_addr_1_reg_1541_pp0_iter7_reg <= gmem_addr_1_reg_1541_pp0_iter6_reg;
                gmem_addr_1_reg_1541_pp0_iter8_reg <= gmem_addr_1_reg_1541_pp0_iter7_reg;
                gmem_addr_1_reg_1541_pp0_iter9_reg <= gmem_addr_1_reg_1541_pp0_iter8_reg;
                icmp_ln230_reg_1647 <= icmp_ln230_fu_884_p2;
                icmp_ln260_reg_1658 <= icmp_ln260_fu_1133_p2;
                icmp_ln265_reg_1663 <= icmp_ln265_fu_1162_p2;
                icmp_ln270_reg_1668 <= icmp_ln270_fu_1191_p2;
                icmp_ln275_reg_1673 <= icmp_ln275_fu_1220_p2;
                icmp_ln280_reg_1678 <= icmp_ln280_fu_1249_p2;
                icmp_ln285_reg_1683 <= icmp_ln285_fu_1278_p2;
                icmp_ln290_reg_1688 <= icmp_ln290_fu_1307_p2;
                key_num_16_reg_1652 <= key_num_16_fu_1101_p3;
                pixel_in_reg_1627 <= m_axi_gmem_RDATA;
                    select_ln298_reg_1693(7 downto 0) <= select_ln298_fu_1416_p3(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                gmem_addr_1_reg_1541_pp0_iter1_reg <= gmem_addr_1_reg_1541;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln205_fu_391_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_1_reg_1541 <= sext_ln298_fu_675_p1;
                gmem_addr_reg_1455 <= sext_ln207_1_fu_429_p1;
            end if;
        end if;
    end process;
    select_ln298_reg_1693(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    IMG_address0 <= zext_ln290_fu_654_p1(14 - 1 downto 0);
    IMG_address1 <= zext_ln285_fu_643_p1(14 - 1 downto 0);
    IMG_address10 <= zext_ln240_fu_544_p1(14 - 1 downto 0);
    IMG_address11 <= zext_ln235_fu_533_p1(14 - 1 downto 0);
    IMG_address12 <= zext_ln225_fu_522_p1(14 - 1 downto 0);
    IMG_address13 <= zext_ln220_fu_511_p1(14 - 1 downto 0);
    IMG_address14 <= zext_ln215_fu_500_p1(14 - 1 downto 0);
    IMG_address15 <= zext_ln210_fu_489_p1(14 - 1 downto 0);
    IMG_address2 <= zext_ln280_fu_632_p1(14 - 1 downto 0);
    IMG_address3 <= zext_ln275_fu_621_p1(14 - 1 downto 0);
    IMG_address4 <= zext_ln270_fu_610_p1(14 - 1 downto 0);
    IMG_address5 <= zext_ln265_fu_599_p1(14 - 1 downto 0);
    IMG_address6 <= zext_ln260_fu_588_p1(14 - 1 downto 0);
    IMG_address7 <= zext_ln255_fu_577_p1(14 - 1 downto 0);
    IMG_address8 <= zext_ln250_fu_566_p1(14 - 1 downto 0);
    IMG_address9 <= zext_ln245_fu_555_p1(14 - 1 downto 0);

    IMG_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce0 <= ap_const_logic_1;
        else 
            IMG_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce1 <= ap_const_logic_1;
        else 
            IMG_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce10_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce10 <= ap_const_logic_1;
        else 
            IMG_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce11_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce11 <= ap_const_logic_1;
        else 
            IMG_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce12_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce12 <= ap_const_logic_1;
        else 
            IMG_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce13_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce13 <= ap_const_logic_1;
        else 
            IMG_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce14_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce14 <= ap_const_logic_1;
        else 
            IMG_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce15_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce15 <= ap_const_logic_1;
        else 
            IMG_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce2 <= ap_const_logic_1;
        else 
            IMG_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce3 <= ap_const_logic_1;
        else 
            IMG_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce4 <= ap_const_logic_1;
        else 
            IMG_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce5 <= ap_const_logic_1;
        else 
            IMG_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce6 <= ap_const_logic_1;
        else 
            IMG_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce7 <= ap_const_logic_1;
        else 
            IMG_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce8 <= ap_const_logic_1;
        else 
            IMG_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    IMG_ce9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            IMG_ce9 <= ap_const_logic_1;
        else 
            IMG_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    abs12_fu_906_p3 <= 
        sub_ln235_fu_890_p2 when (abscond11_fu_900_p2(0) = '1') else 
        neg10_fu_894_p2;
    abs15_fu_949_p3 <= 
        sub_ln240_fu_933_p2 when (abscond14_fu_943_p2(0) = '1') else 
        neg13_fu_937_p2;
    abs18_fu_992_p3 <= 
        sub_ln245_fu_976_p2 when (abscond17_fu_986_p2(0) = '1') else 
        neg16_fu_980_p2;
    abs21_fu_1039_p3 <= 
        sub_ln250_fu_1023_p2 when (abscond20_fu_1033_p2(0) = '1') else 
        neg19_fu_1027_p2;
    abs24_fu_1082_p3 <= 
        sub_ln255_fu_1066_p2 when (abscond23_fu_1076_p2(0) = '1') else 
        neg22_fu_1070_p2;
    abs27_fu_1125_p3 <= 
        sub_ln260_fu_1109_p2 when (abscond26_fu_1119_p2(0) = '1') else 
        neg25_fu_1113_p2;
    abs30_fu_1154_p3 <= 
        sub_ln265_fu_1138_p2 when (abscond29_fu_1148_p2(0) = '1') else 
        neg28_fu_1142_p2;
    abs33_fu_1183_p3 <= 
        sub_ln270_fu_1167_p2 when (abscond32_fu_1177_p2(0) = '1') else 
        neg31_fu_1171_p2;
    abs36_fu_1212_p3 <= 
        sub_ln275_fu_1196_p2 when (abscond35_fu_1206_p2(0) = '1') else 
        neg34_fu_1200_p2;
    abs39_fu_1241_p3 <= 
        sub_ln280_fu_1225_p2 when (abscond38_fu_1235_p2(0) = '1') else 
        neg37_fu_1229_p2;
    abs3_fu_765_p3 <= 
        sub_ln215_fu_749_p2 when (abscond2_fu_759_p2(0) = '1') else 
        neg1_fu_753_p2;
    abs42_fu_1270_p3 <= 
        sub_ln285_fu_1254_p2 when (abscond41_fu_1264_p2(0) = '1') else 
        neg40_fu_1258_p2;
    abs45_fu_1299_p3 <= 
        sub_ln290_fu_1283_p2 when (abscond44_fu_1293_p2(0) = '1') else 
        neg43_fu_1287_p2;
    abs6_fu_810_p3 <= 
        sub_ln220_fu_794_p2 when (abscond5_fu_804_p2(0) = '1') else 
        neg4_fu_798_p2;
    abs9_fu_857_p3 <= 
        sub_ln225_fu_841_p2 when (abscond8_fu_851_p2(0) = '1') else 
        neg7_fu_845_p2;
    abs_fu_732_p3 <= 
        sub_ln210_fu_716_p2 when (abscond_fu_726_p2(0) = '1') else 
        neg_fu_720_p2;
    abscond11_fu_900_p2 <= "1" when (signed(sub_ln235_fu_890_p2) > signed(ap_const_lv32_0)) else "0";
    abscond14_fu_943_p2 <= "1" when (signed(sub_ln240_fu_933_p2) > signed(ap_const_lv32_0)) else "0";
    abscond17_fu_986_p2 <= "1" when (signed(sub_ln245_fu_976_p2) > signed(ap_const_lv32_0)) else "0";
    abscond20_fu_1033_p2 <= "1" when (signed(sub_ln250_fu_1023_p2) > signed(ap_const_lv32_0)) else "0";
    abscond23_fu_1076_p2 <= "1" when (signed(sub_ln255_fu_1066_p2) > signed(ap_const_lv32_0)) else "0";
    abscond26_fu_1119_p2 <= "1" when (signed(sub_ln260_fu_1109_p2) > signed(ap_const_lv32_0)) else "0";
    abscond29_fu_1148_p2 <= "1" when (signed(sub_ln265_fu_1138_p2) > signed(ap_const_lv32_0)) else "0";
    abscond2_fu_759_p2 <= "1" when (signed(sub_ln215_fu_749_p2) > signed(ap_const_lv32_0)) else "0";
    abscond32_fu_1177_p2 <= "1" when (signed(sub_ln270_fu_1167_p2) > signed(ap_const_lv32_0)) else "0";
    abscond35_fu_1206_p2 <= "1" when (signed(sub_ln275_fu_1196_p2) > signed(ap_const_lv32_0)) else "0";
    abscond38_fu_1235_p2 <= "1" when (signed(sub_ln280_fu_1225_p2) > signed(ap_const_lv32_0)) else "0";
    abscond41_fu_1264_p2 <= "1" when (signed(sub_ln285_fu_1254_p2) > signed(ap_const_lv32_0)) else "0";
    abscond44_fu_1293_p2 <= "1" when (signed(sub_ln290_fu_1283_p2) > signed(ap_const_lv32_0)) else "0";
    abscond5_fu_804_p2 <= "1" when (signed(sub_ln220_fu_794_p2) > signed(ap_const_lv32_0)) else "0";
    abscond8_fu_851_p2 <= "1" when (signed(sub_ln225_fu_841_p2) > signed(ap_const_lv32_0)) else "0";
    abscond_fu_726_p2 <= "1" when (signed(sub_ln210_fu_716_p2) > signed(ap_const_lv32_0)) else "0";
    add_ln207_fu_413_p2 <= std_logic_vector(signed(sext_ln207_fu_409_p1) + signed(img_in));
    add_ln210_fu_483_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3E80));
    add_ln215_fu_494_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3));
    add_ln220_fu_505_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_180));
    add_ln225_fu_516_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3FFD));
    add_ln235_fu_527_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3E81));
    add_ln240_fu_538_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3F02));
    add_ln245_fu_549_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3F83));
    add_ln250_fu_560_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_83));
    add_ln255_fu_571_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_102));
    add_ln260_fu_582_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_181));
    add_ln265_fu_593_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_17F));
    add_ln270_fu_604_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_FE));
    add_ln275_fu_615_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_7D));
    add_ln280_fu_626_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3F7D));
    add_ln285_fu_637_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3EFE));
    add_ln290_fu_648_p2 <= std_logic_vector(unsigned(empty_19_fu_397_p1) + unsigned(ap_const_lv14_3E7F));
    add_ln296_fu_659_p2 <= std_logic_vector(signed(sext_ln207_fu_409_p1) + signed(img_out));
    and_ln295_fu_1411_p2 <= (icmp_ln295_fu_1405_p2 and icmp_ln230_reg_1647);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter16, m_axi_gmem_RVALID, m_axi_gmem_BVALID)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (m_axi_gmem_RVALID = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter16, m_axi_gmem_AWREADY, m_axi_gmem_WREADY, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, m_axi_gmem_BVALID)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (m_axi_gmem_RVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter16, m_axi_gmem_AWREADY, m_axi_gmem_WREADY, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, m_axi_gmem_BVALID)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (m_axi_gmem_RVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp0_stage0_iter16_assign_proc : process(m_axi_gmem_BVALID)
    begin
                ap_block_state17_pp0_stage0_iter16 <= (m_axi_gmem_BVALID = ap_const_logic_0);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter8_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state9_pp0_stage0_iter8 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln205_fu_391_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln205_fu_391_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_136, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_4 <= ap_const_lv32_183;
        else 
            ap_sig_allocacmp_i_4 <= i_fu_136;
        end if; 
    end process;

    empty_19_fu_397_p1 <= ap_sig_allocacmp_i_4(14 - 1 downto 0);
    empty_fu_387_p1 <= ap_sig_allocacmp_i_4(7 - 1 downto 0);

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter10, m_axi_gmem_AWREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter16, m_axi_gmem_BVALID, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter8, m_axi_gmem_RVALID, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter11, m_axi_gmem_WREADY, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    i_5_fu_691_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_4) + unsigned(ap_const_lv32_6));
    i_6_fu_697_p3 <= 
        i_5_fu_691_p2 when (icmp_ln300_fu_685_p2(0) = '1') else 
        ap_sig_allocacmp_i_4;
    i_7_fu_705_p2 <= std_logic_vector(unsigned(i_6_fu_697_p3) + unsigned(ap_const_lv32_1));
    icmp_ln205_fu_391_p2 <= "1" when (signed(ap_sig_allocacmp_i_4) < signed(ap_const_lv32_3E7D)) else "0";
    icmp_ln215_fu_773_p2 <= "1" when (signed(abs3_fu_765_p3) > signed(threshold)) else "0";
    icmp_ln220_fu_818_p2 <= "1" when (signed(abs6_fu_810_p3) > signed(threshold)) else "0";
    icmp_ln225_fu_865_p2 <= "1" when (signed(abs9_fu_857_p3) > signed(threshold)) else "0";
    icmp_ln230_fu_884_p2 <= "1" when (unsigned(key_num_6_fu_876_p3) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln235_fu_914_p2 <= "1" when (signed(abs12_fu_906_p3) > signed(threshold)) else "0";
    icmp_ln240_fu_957_p2 <= "1" when (signed(abs15_fu_949_p3) > signed(threshold)) else "0";
    icmp_ln245_fu_1000_p2 <= "1" when (signed(abs18_fu_992_p3) > signed(threshold)) else "0";
    icmp_ln250_fu_1047_p2 <= "1" when (signed(abs21_fu_1039_p3) > signed(threshold)) else "0";
    icmp_ln255_fu_1090_p2 <= "1" when (signed(abs24_fu_1082_p3) > signed(threshold)) else "0";
    icmp_ln260_fu_1133_p2 <= "1" when (signed(abs27_fu_1125_p3) > signed(threshold)) else "0";
    icmp_ln265_fu_1162_p2 <= "1" when (signed(abs30_fu_1154_p3) > signed(threshold)) else "0";
    icmp_ln270_fu_1191_p2 <= "1" when (signed(abs33_fu_1183_p3) > signed(threshold)) else "0";
    icmp_ln275_fu_1220_p2 <= "1" when (signed(abs36_fu_1212_p3) > signed(threshold)) else "0";
    icmp_ln280_fu_1249_p2 <= "1" when (signed(abs39_fu_1241_p3) > signed(threshold)) else "0";
    icmp_ln285_fu_1278_p2 <= "1" when (signed(abs42_fu_1270_p3) > signed(threshold)) else "0";
    icmp_ln290_fu_1307_p2 <= "1" when (signed(abs45_fu_1299_p3) > signed(threshold)) else "0";
    icmp_ln295_fu_1405_p2 <= "1" when (unsigned(key_num_30_fu_1398_p3) > unsigned(ap_const_lv5_B)) else "0";
    icmp_ln300_fu_685_p2 <= "1" when (select_ln209_fu_475_p3 = ap_const_lv8_7C) else "0";
    key_num_10_fu_968_p3 <= 
        key_num_9_fu_962_p2 when (icmp_ln240_fu_957_p2(0) = '1') else 
        key_num_8_fu_925_p3;
    key_num_11_fu_1005_p2 <= std_logic_vector(unsigned(key_num_10_fu_968_p3) + unsigned(ap_const_lv3_1));
    key_num_12_fu_1011_p3 <= 
        key_num_11_fu_1005_p2 when (icmp_ln245_fu_1000_p2(0) = '1') else 
        key_num_10_fu_968_p3;
    key_num_13_fu_1052_p2 <= std_logic_vector(unsigned(zext_ln198_2_fu_1019_p1) + unsigned(ap_const_lv4_1));
    key_num_14_fu_1058_p3 <= 
        key_num_13_fu_1052_p2 when (icmp_ln250_fu_1047_p2(0) = '1') else 
        zext_ln198_2_fu_1019_p1;
    key_num_15_fu_1095_p2 <= std_logic_vector(unsigned(key_num_14_fu_1058_p3) + unsigned(ap_const_lv4_1));
    key_num_16_fu_1101_p3 <= 
        key_num_15_fu_1095_p2 when (icmp_ln255_fu_1090_p2(0) = '1') else 
        key_num_14_fu_1058_p3;
    key_num_17_fu_1312_p2 <= std_logic_vector(unsigned(key_num_16_reg_1652) + unsigned(ap_const_lv4_1));
    key_num_18_fu_1317_p3 <= 
        key_num_17_fu_1312_p2 when (icmp_ln260_reg_1658(0) = '1') else 
        key_num_16_reg_1652;
    key_num_19_fu_1323_p2 <= std_logic_vector(unsigned(key_num_18_fu_1317_p3) + unsigned(ap_const_lv4_1));
    key_num_1_fu_778_p3 <= 
        ap_const_lv2_2 when (key_num_fu_740_p2(0) = '1') else 
        ap_const_lv2_1;
    key_num_20_fu_1329_p3 <= 
        key_num_19_fu_1323_p2 when (icmp_ln265_reg_1663(0) = '1') else 
        key_num_18_fu_1317_p3;
    key_num_21_fu_1336_p2 <= std_logic_vector(unsigned(key_num_20_fu_1329_p3) + unsigned(ap_const_lv4_1));
    key_num_22_fu_1342_p3 <= 
        key_num_21_fu_1336_p2 when (icmp_ln270_reg_1668(0) = '1') else 
        key_num_20_fu_1329_p3;
    key_num_23_fu_1349_p2 <= std_logic_vector(unsigned(key_num_22_fu_1342_p3) + unsigned(ap_const_lv4_1));
    key_num_24_fu_1355_p3 <= 
        key_num_23_fu_1349_p2 when (icmp_ln275_reg_1673(0) = '1') else 
        key_num_22_fu_1342_p3;
    key_num_25_fu_1362_p2 <= std_logic_vector(unsigned(key_num_24_fu_1355_p3) + unsigned(ap_const_lv4_1));
    key_num_26_fu_1368_p3 <= 
        key_num_25_fu_1362_p2 when (icmp_ln280_reg_1678(0) = '1') else 
        key_num_24_fu_1355_p3;
    key_num_27_fu_1375_p2 <= std_logic_vector(unsigned(key_num_26_fu_1368_p3) + unsigned(ap_const_lv4_1));
    key_num_28_fu_1381_p3 <= 
        key_num_27_fu_1375_p2 when (icmp_ln285_reg_1683(0) = '1') else 
        key_num_26_fu_1368_p3;
    key_num_29_fu_1392_p2 <= std_logic_vector(unsigned(zext_ln198_3_fu_1388_p1) + unsigned(ap_const_lv5_1));
    key_num_2_fu_786_p3 <= 
        key_num_1_fu_778_p3 when (icmp_ln215_fu_773_p2(0) = '1') else 
        zext_ln198_fu_745_p1;
    key_num_30_fu_1398_p3 <= 
        key_num_29_fu_1392_p2 when (icmp_ln290_reg_1688(0) = '1') else 
        zext_ln198_3_fu_1388_p1;
    key_num_3_fu_823_p2 <= std_logic_vector(unsigned(key_num_2_fu_786_p3) + unsigned(ap_const_lv2_1));
    key_num_4_fu_829_p3 <= 
        key_num_3_fu_823_p2 when (icmp_ln220_fu_818_p2(0) = '1') else 
        key_num_2_fu_786_p3;
    key_num_5_fu_870_p2 <= std_logic_vector(unsigned(zext_ln198_1_fu_837_p1) + unsigned(ap_const_lv3_1));
    key_num_6_fu_876_p3 <= 
        key_num_5_fu_870_p2 when (icmp_ln225_fu_865_p2(0) = '1') else 
        zext_ln198_1_fu_837_p1;
    key_num_7_fu_919_p2 <= std_logic_vector(unsigned(key_num_6_fu_876_p3) + unsigned(ap_const_lv3_1));
    key_num_8_fu_925_p3 <= 
        key_num_7_fu_919_p2 when (icmp_ln235_fu_914_p2(0) = '1') else 
        key_num_6_fu_876_p3;
    key_num_9_fu_962_p2 <= std_logic_vector(unsigned(key_num_8_fu_925_p3) + unsigned(ap_const_lv3_1));
    key_num_fu_740_p2 <= "1" when (signed(abs_fu_732_p3) > signed(threshold)) else "0";
    m_axi_gmem_ARADDR <= gmem_addr_reg_1455;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= gmem_addr_1_reg_1541_pp0_iter9_reg;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= select_ln298_reg_1693;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    neg10_fu_894_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln235_fu_890_p2));
    neg13_fu_937_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln240_fu_933_p2));
    neg16_fu_980_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln245_fu_976_p2));
    neg19_fu_1027_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln250_fu_1023_p2));
    neg1_fu_753_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln215_fu_749_p2));
    neg22_fu_1070_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln255_fu_1066_p2));
    neg25_fu_1113_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln260_fu_1109_p2));
    neg28_fu_1142_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln265_fu_1138_p2));
    neg31_fu_1171_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln270_fu_1167_p2));
    neg34_fu_1200_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln275_fu_1196_p2));
    neg37_fu_1229_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln280_fu_1225_p2));
    neg40_fu_1258_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln285_fu_1254_p2));
    neg43_fu_1287_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln290_fu_1283_p2));
    neg4_fu_798_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln220_fu_794_p2));
    neg7_fu_845_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln225_fu_841_p2));
    neg_fu_720_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln210_fu_716_p2));
    p_and_t_cast_fu_453_p3 <= (ap_const_lv1_0 & sub_ln209_fu_447_p2);
    select_ln209_fu_475_p3 <= 
        sub_ln209_1_fu_461_p2 when (tmp_fu_439_p3(0) = '1') else 
        tmp_3_fu_467_p3;
    select_ln298_fu_1416_p3 <= 
        ap_const_lv32_FF when (and_ln295_fu_1411_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln207_1_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_419_p4),64));

        sext_ln207_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_401_p3),64));

        sext_ln298_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_665_p4),64));

    shl_ln_fu_401_p3 <= (ap_sig_allocacmp_i_4 & ap_const_lv2_0);
    sub_ln209_1_fu_461_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(p_and_t_cast_fu_453_p3));
    sub_ln209_fu_447_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(empty_fu_387_p1));
    sub_ln210_fu_716_p2 <= std_logic_vector(unsigned(IMG_load_reg_1547_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln215_fu_749_p2 <= std_logic_vector(unsigned(IMG_load_1_reg_1552_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln220_fu_794_p2 <= std_logic_vector(unsigned(IMG_load_2_reg_1557_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln225_fu_841_p2 <= std_logic_vector(unsigned(IMG_load_3_reg_1562_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln235_fu_890_p2 <= std_logic_vector(unsigned(IMG_load_4_reg_1567_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln240_fu_933_p2 <= std_logic_vector(unsigned(IMG_load_5_reg_1572_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln245_fu_976_p2 <= std_logic_vector(unsigned(IMG_load_6_reg_1577_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln250_fu_1023_p2 <= std_logic_vector(unsigned(IMG_load_7_reg_1582_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln255_fu_1066_p2 <= std_logic_vector(unsigned(IMG_load_8_reg_1587_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln260_fu_1109_p2 <= std_logic_vector(unsigned(IMG_load_9_reg_1592_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln265_fu_1138_p2 <= std_logic_vector(unsigned(IMG_load_10_reg_1597_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln270_fu_1167_p2 <= std_logic_vector(unsigned(IMG_load_11_reg_1602_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln275_fu_1196_p2 <= std_logic_vector(unsigned(IMG_load_12_reg_1607_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln280_fu_1225_p2 <= std_logic_vector(unsigned(IMG_load_13_reg_1612_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln285_fu_1254_p2 <= std_logic_vector(unsigned(IMG_load_14_reg_1617_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    sub_ln290_fu_1283_p2 <= std_logic_vector(unsigned(IMG_load_15_reg_1622_pp0_iter8_reg) - unsigned(pixel_in_reg_1627));
    tmp_3_fu_467_p3 <= (ap_const_lv1_0 & empty_fu_387_p1);
    tmp_fu_439_p3 <= ap_sig_allocacmp_i_4(31 downto 31);
    trunc_ln1_fu_419_p4 <= add_ln207_fu_413_p2(63 downto 2);
    trunc_ln2_fu_665_p4 <= add_ln296_fu_659_p2(63 downto 2);
    zext_ln198_1_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(key_num_4_fu_829_p3),3));
    zext_ln198_2_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(key_num_12_fu_1011_p3),4));
    zext_ln198_3_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(key_num_28_fu_1381_p3),5));
    zext_ln198_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(key_num_fu_740_p2),2));
    zext_ln210_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln210_fu_483_p2),64));
    zext_ln215_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_494_p2),64));
    zext_ln220_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln220_fu_505_p2),64));
    zext_ln225_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln225_fu_516_p2),64));
    zext_ln235_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln235_fu_527_p2),64));
    zext_ln240_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln240_fu_538_p2),64));
    zext_ln245_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln245_fu_549_p2),64));
    zext_ln250_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln250_fu_560_p2),64));
    zext_ln255_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln255_fu_571_p2),64));
    zext_ln260_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln260_fu_582_p2),64));
    zext_ln265_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln265_fu_593_p2),64));
    zext_ln270_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln270_fu_604_p2),64));
    zext_ln275_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln275_fu_615_p2),64));
    zext_ln280_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln280_fu_626_p2),64));
    zext_ln285_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln285_fu_637_p2),64));
    zext_ln290_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln290_fu_648_p2),64));
end behav;
