// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fast_accel_fast_accel_Pipeline_VITIS_LOOP_208_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        img_in,
        IMG_address0,
        IMG_ce0,
        IMG_q0,
        IMG_address1,
        IMG_ce1,
        IMG_q1,
        IMG_address2,
        IMG_ce2,
        IMG_q2,
        IMG_address3,
        IMG_ce3,
        IMG_q3,
        IMG_address4,
        IMG_ce4,
        IMG_q4,
        IMG_address5,
        IMG_ce5,
        IMG_q5,
        IMG_address6,
        IMG_ce6,
        IMG_q6,
        IMG_address7,
        IMG_ce7,
        IMG_q7,
        IMG_address8,
        IMG_ce8,
        IMG_q8,
        IMG_address9,
        IMG_ce9,
        IMG_q9,
        IMG_address10,
        IMG_ce10,
        IMG_q10,
        IMG_address11,
        IMG_ce11,
        IMG_q11,
        IMG_address12,
        IMG_ce12,
        IMG_q12,
        IMG_address13,
        IMG_ce13,
        IMG_q13,
        IMG_address14,
        IMG_ce14,
        IMG_q14,
        IMG_address15,
        IMG_ce15,
        IMG_q15,
        threshold,
        img_out
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] img_in;
output  [13:0] IMG_address0;
output   IMG_ce0;
input  [31:0] IMG_q0;
output  [13:0] IMG_address1;
output   IMG_ce1;
input  [31:0] IMG_q1;
output  [13:0] IMG_address2;
output   IMG_ce2;
input  [31:0] IMG_q2;
output  [13:0] IMG_address3;
output   IMG_ce3;
input  [31:0] IMG_q3;
output  [13:0] IMG_address4;
output   IMG_ce4;
input  [31:0] IMG_q4;
output  [13:0] IMG_address5;
output   IMG_ce5;
input  [31:0] IMG_q5;
output  [13:0] IMG_address6;
output   IMG_ce6;
input  [31:0] IMG_q6;
output  [13:0] IMG_address7;
output   IMG_ce7;
input  [31:0] IMG_q7;
output  [13:0] IMG_address8;
output   IMG_ce8;
input  [31:0] IMG_q8;
output  [13:0] IMG_address9;
output   IMG_ce9;
input  [31:0] IMG_q9;
output  [13:0] IMG_address10;
output   IMG_ce10;
input  [31:0] IMG_q10;
output  [13:0] IMG_address11;
output   IMG_ce11;
input  [31:0] IMG_q11;
output  [13:0] IMG_address12;
output   IMG_ce12;
input  [31:0] IMG_q12;
output  [13:0] IMG_address13;
output   IMG_ce13;
input  [31:0] IMG_q13;
output  [13:0] IMG_address14;
output   IMG_ce14;
input  [31:0] IMG_q14;
output  [13:0] IMG_address15;
output   IMG_ce15;
input  [31:0] IMG_q15;
input  [31:0] threshold;
input  [63:0] img_out;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;
reg IMG_ce0;
reg IMG_ce1;
reg IMG_ce2;
reg IMG_ce3;
reg IMG_ce4;
reg IMG_ce5;
reg IMG_ce6;
reg IMG_ce7;
reg IMG_ce8;
reg IMG_ce9;
reg IMG_ce10;
reg IMG_ce11;
reg IMG_ce12;
reg IMG_ce13;
reg IMG_ce14;
reg IMG_ce15;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_state17_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln208_fu_391_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] gmem_addr_reg_1455;
reg   [63:0] gmem_addr_1_reg_1541;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter1_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter2_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter3_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter4_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter5_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter6_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter7_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter8_reg;
reg   [63:0] gmem_addr_1_reg_1541_pp0_iter9_reg;
reg   [31:0] IMG_load_reg_1547;
reg   [31:0] IMG_load_reg_1547_pp0_iter2_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter3_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter4_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter5_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter6_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter7_reg;
reg   [31:0] IMG_load_reg_1547_pp0_iter8_reg;
reg   [31:0] IMG_load_1_reg_1552;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter2_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter3_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter4_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter5_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter6_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter7_reg;
reg   [31:0] IMG_load_1_reg_1552_pp0_iter8_reg;
reg   [31:0] IMG_load_2_reg_1557;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter2_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter3_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter4_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter5_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter6_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter7_reg;
reg   [31:0] IMG_load_2_reg_1557_pp0_iter8_reg;
reg   [31:0] IMG_load_3_reg_1562;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter2_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter3_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter4_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter5_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter6_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter7_reg;
reg   [31:0] IMG_load_3_reg_1562_pp0_iter8_reg;
reg   [31:0] IMG_load_4_reg_1567;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter2_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter3_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter4_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter5_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter6_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter7_reg;
reg   [31:0] IMG_load_4_reg_1567_pp0_iter8_reg;
reg   [31:0] IMG_load_5_reg_1572;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter2_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter3_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter4_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter5_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter6_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter7_reg;
reg   [31:0] IMG_load_5_reg_1572_pp0_iter8_reg;
reg   [31:0] IMG_load_6_reg_1577;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter2_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter3_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter4_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter5_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter6_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter7_reg;
reg   [31:0] IMG_load_6_reg_1577_pp0_iter8_reg;
reg   [31:0] IMG_load_7_reg_1582;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter2_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter3_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter4_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter5_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter6_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter7_reg;
reg   [31:0] IMG_load_7_reg_1582_pp0_iter8_reg;
reg   [31:0] IMG_load_8_reg_1587;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter2_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter3_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter4_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter5_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter6_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter7_reg;
reg   [31:0] IMG_load_8_reg_1587_pp0_iter8_reg;
reg   [31:0] IMG_load_9_reg_1592;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter2_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter3_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter4_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter5_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter6_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter7_reg;
reg   [31:0] IMG_load_9_reg_1592_pp0_iter8_reg;
reg   [31:0] IMG_load_10_reg_1597;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter2_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter3_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter4_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter5_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter6_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter7_reg;
reg   [31:0] IMG_load_10_reg_1597_pp0_iter8_reg;
reg   [31:0] IMG_load_11_reg_1602;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter2_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter3_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter4_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter5_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter6_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter7_reg;
reg   [31:0] IMG_load_11_reg_1602_pp0_iter8_reg;
reg   [31:0] IMG_load_12_reg_1607;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter2_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter3_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter4_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter5_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter6_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter7_reg;
reg   [31:0] IMG_load_12_reg_1607_pp0_iter8_reg;
reg   [31:0] IMG_load_13_reg_1612;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter2_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter3_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter4_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter5_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter6_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter7_reg;
reg   [31:0] IMG_load_13_reg_1612_pp0_iter8_reg;
reg   [31:0] IMG_load_14_reg_1617;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter2_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter3_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter4_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter5_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter6_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter7_reg;
reg   [31:0] IMG_load_14_reg_1617_pp0_iter8_reg;
reg   [31:0] IMG_load_15_reg_1622;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter2_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter3_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter4_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter5_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter6_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter7_reg;
reg   [31:0] IMG_load_15_reg_1622_pp0_iter8_reg;
reg   [31:0] pixel_in_reg_1627;
wire   [0:0] icmp_ln233_fu_884_p2;
reg   [0:0] icmp_ln233_reg_1647;
wire   [3:0] key_num_16_fu_1101_p3;
reg   [3:0] key_num_16_reg_1652;
wire   [0:0] icmp_ln263_fu_1133_p2;
reg   [0:0] icmp_ln263_reg_1658;
wire   [0:0] icmp_ln268_fu_1162_p2;
reg   [0:0] icmp_ln268_reg_1663;
wire   [0:0] icmp_ln273_fu_1191_p2;
reg   [0:0] icmp_ln273_reg_1668;
wire   [0:0] icmp_ln278_fu_1220_p2;
reg   [0:0] icmp_ln278_reg_1673;
wire   [0:0] icmp_ln283_fu_1249_p2;
reg   [0:0] icmp_ln283_reg_1678;
wire   [0:0] icmp_ln288_fu_1278_p2;
reg   [0:0] icmp_ln288_reg_1683;
wire   [0:0] icmp_ln293_fu_1307_p2;
reg   [0:0] icmp_ln293_reg_1688;
wire   [31:0] select_ln301_fu_1416_p3;
reg   [31:0] select_ln301_reg_1693;
wire   [63:0] zext_ln213_fu_489_p1;
wire   [63:0] zext_ln218_fu_500_p1;
wire   [63:0] zext_ln223_fu_511_p1;
wire   [63:0] zext_ln228_fu_522_p1;
wire   [63:0] zext_ln238_fu_533_p1;
wire   [63:0] zext_ln243_fu_544_p1;
wire   [63:0] zext_ln248_fu_555_p1;
wire   [63:0] zext_ln253_fu_566_p1;
wire   [63:0] zext_ln258_fu_577_p1;
wire   [63:0] zext_ln263_fu_588_p1;
wire   [63:0] zext_ln268_fu_599_p1;
wire   [63:0] zext_ln273_fu_610_p1;
wire   [63:0] zext_ln278_fu_621_p1;
wire   [63:0] zext_ln283_fu_632_p1;
wire   [63:0] zext_ln288_fu_643_p1;
wire   [63:0] zext_ln293_fu_654_p1;
wire  signed [63:0] sext_ln210_1_fu_429_p1;
wire  signed [63:0] sext_ln301_fu_675_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] i_fu_136;
wire   [31:0] i_7_fu_705_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_4;
wire   [33:0] shl_ln_fu_401_p3;
wire  signed [63:0] sext_ln210_fu_409_p1;
wire   [63:0] add_ln210_fu_413_p2;
wire   [61:0] trunc_ln1_fu_419_p4;
wire   [6:0] empty_fu_387_p1;
wire   [6:0] sub_ln212_fu_447_p2;
wire   [7:0] p_and_t_cast_fu_453_p3;
wire   [0:0] tmp_fu_439_p3;
wire   [7:0] sub_ln212_1_fu_461_p2;
wire   [7:0] tmp_3_fu_467_p3;
wire   [13:0] empty_19_fu_397_p1;
wire   [13:0] add_ln213_fu_483_p2;
wire   [13:0] add_ln218_fu_494_p2;
wire   [13:0] add_ln223_fu_505_p2;
wire   [13:0] add_ln228_fu_516_p2;
wire   [13:0] add_ln238_fu_527_p2;
wire   [13:0] add_ln243_fu_538_p2;
wire   [13:0] add_ln248_fu_549_p2;
wire   [13:0] add_ln253_fu_560_p2;
wire   [13:0] add_ln258_fu_571_p2;
wire   [13:0] add_ln263_fu_582_p2;
wire   [13:0] add_ln268_fu_593_p2;
wire   [13:0] add_ln273_fu_604_p2;
wire   [13:0] add_ln278_fu_615_p2;
wire   [13:0] add_ln283_fu_626_p2;
wire   [13:0] add_ln288_fu_637_p2;
wire   [13:0] add_ln293_fu_648_p2;
wire   [63:0] add_ln299_fu_659_p2;
wire   [61:0] trunc_ln2_fu_665_p4;
wire   [7:0] select_ln212_fu_475_p3;
wire   [0:0] icmp_ln303_fu_685_p2;
wire   [31:0] i_5_fu_691_p2;
wire   [31:0] i_6_fu_697_p3;
wire   [31:0] sub_ln213_fu_716_p2;
wire   [0:0] abscond_fu_726_p2;
wire   [31:0] neg_fu_720_p2;
wire   [31:0] abs_fu_732_p3;
wire   [0:0] key_num_fu_740_p2;
wire   [31:0] sub_ln218_fu_749_p2;
wire   [0:0] abscond2_fu_759_p2;
wire   [31:0] neg1_fu_753_p2;
wire   [31:0] abs3_fu_765_p3;
wire   [0:0] icmp_ln218_fu_773_p2;
wire   [1:0] key_num_1_fu_778_p3;
wire   [1:0] zext_ln201_fu_745_p1;
wire   [31:0] sub_ln223_fu_794_p2;
wire   [0:0] abscond5_fu_804_p2;
wire   [31:0] neg4_fu_798_p2;
wire   [31:0] abs6_fu_810_p3;
wire   [1:0] key_num_2_fu_786_p3;
wire   [0:0] icmp_ln223_fu_818_p2;
wire   [1:0] key_num_3_fu_823_p2;
wire   [1:0] key_num_4_fu_829_p3;
wire   [31:0] sub_ln228_fu_841_p2;
wire   [0:0] abscond8_fu_851_p2;
wire   [31:0] neg7_fu_845_p2;
wire   [31:0] abs9_fu_857_p3;
wire   [2:0] zext_ln201_1_fu_837_p1;
wire   [0:0] icmp_ln228_fu_865_p2;
wire   [2:0] key_num_5_fu_870_p2;
wire   [2:0] key_num_6_fu_876_p3;
wire   [31:0] sub_ln238_fu_890_p2;
wire   [0:0] abscond11_fu_900_p2;
wire   [31:0] neg10_fu_894_p2;
wire   [31:0] abs12_fu_906_p3;
wire   [0:0] icmp_ln238_fu_914_p2;
wire   [2:0] key_num_7_fu_919_p2;
wire   [31:0] sub_ln243_fu_933_p2;
wire   [0:0] abscond14_fu_943_p2;
wire   [31:0] neg13_fu_937_p2;
wire   [31:0] abs15_fu_949_p3;
wire   [2:0] key_num_8_fu_925_p3;
wire   [0:0] icmp_ln243_fu_957_p2;
wire   [2:0] key_num_9_fu_962_p2;
wire   [31:0] sub_ln248_fu_976_p2;
wire   [0:0] abscond17_fu_986_p2;
wire   [31:0] neg16_fu_980_p2;
wire   [31:0] abs18_fu_992_p3;
wire   [2:0] key_num_10_fu_968_p3;
wire   [0:0] icmp_ln248_fu_1000_p2;
wire   [2:0] key_num_11_fu_1005_p2;
wire   [2:0] key_num_12_fu_1011_p3;
wire   [31:0] sub_ln253_fu_1023_p2;
wire   [0:0] abscond20_fu_1033_p2;
wire   [31:0] neg19_fu_1027_p2;
wire   [31:0] abs21_fu_1039_p3;
wire   [3:0] zext_ln201_2_fu_1019_p1;
wire   [0:0] icmp_ln253_fu_1047_p2;
wire   [3:0] key_num_13_fu_1052_p2;
wire   [31:0] sub_ln258_fu_1066_p2;
wire   [0:0] abscond23_fu_1076_p2;
wire   [31:0] neg22_fu_1070_p2;
wire   [31:0] abs24_fu_1082_p3;
wire   [3:0] key_num_14_fu_1058_p3;
wire   [0:0] icmp_ln258_fu_1090_p2;
wire   [3:0] key_num_15_fu_1095_p2;
wire   [31:0] sub_ln263_fu_1109_p2;
wire   [0:0] abscond26_fu_1119_p2;
wire   [31:0] neg25_fu_1113_p2;
wire   [31:0] abs27_fu_1125_p3;
wire   [31:0] sub_ln268_fu_1138_p2;
wire   [0:0] abscond29_fu_1148_p2;
wire   [31:0] neg28_fu_1142_p2;
wire   [31:0] abs30_fu_1154_p3;
wire   [31:0] sub_ln273_fu_1167_p2;
wire   [0:0] abscond32_fu_1177_p2;
wire   [31:0] neg31_fu_1171_p2;
wire   [31:0] abs33_fu_1183_p3;
wire   [31:0] sub_ln278_fu_1196_p2;
wire   [0:0] abscond35_fu_1206_p2;
wire   [31:0] neg34_fu_1200_p2;
wire   [31:0] abs36_fu_1212_p3;
wire   [31:0] sub_ln283_fu_1225_p2;
wire   [0:0] abscond38_fu_1235_p2;
wire   [31:0] neg37_fu_1229_p2;
wire   [31:0] abs39_fu_1241_p3;
wire   [31:0] sub_ln288_fu_1254_p2;
wire   [0:0] abscond41_fu_1264_p2;
wire   [31:0] neg40_fu_1258_p2;
wire   [31:0] abs42_fu_1270_p3;
wire   [31:0] sub_ln293_fu_1283_p2;
wire   [0:0] abscond44_fu_1293_p2;
wire   [31:0] neg43_fu_1287_p2;
wire   [31:0] abs45_fu_1299_p3;
wire   [3:0] key_num_17_fu_1312_p2;
wire   [3:0] key_num_18_fu_1317_p3;
wire   [3:0] key_num_19_fu_1323_p2;
wire   [3:0] key_num_20_fu_1329_p3;
wire   [3:0] key_num_21_fu_1336_p2;
wire   [3:0] key_num_22_fu_1342_p3;
wire   [3:0] key_num_23_fu_1349_p2;
wire   [3:0] key_num_24_fu_1355_p3;
wire   [3:0] key_num_25_fu_1362_p2;
wire   [3:0] key_num_26_fu_1368_p3;
wire   [3:0] key_num_27_fu_1375_p2;
wire   [3:0] key_num_28_fu_1381_p3;
wire   [4:0] zext_ln201_3_fu_1388_p1;
wire   [4:0] key_num_29_fu_1392_p2;
wire   [4:0] key_num_30_fu_1398_p3;
wire   [0:0] icmp_ln298_fu_1405_p2;
wire   [0:0] and_ln298_fu_1411_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fast_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln208_fu_391_p2 == 1'd1))) begin
            i_fu_136 <= i_7_fu_705_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_136 <= 32'd387;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_load_10_reg_1597 <= IMG_q5;
        IMG_load_11_reg_1602 <= IMG_q4;
        IMG_load_12_reg_1607 <= IMG_q3;
        IMG_load_13_reg_1612 <= IMG_q2;
        IMG_load_14_reg_1617 <= IMG_q1;
        IMG_load_15_reg_1622 <= IMG_q0;
        IMG_load_1_reg_1552 <= IMG_q14;
        IMG_load_2_reg_1557 <= IMG_q13;
        IMG_load_3_reg_1562 <= IMG_q12;
        IMG_load_4_reg_1567 <= IMG_q11;
        IMG_load_5_reg_1572 <= IMG_q10;
        IMG_load_6_reg_1577 <= IMG_q9;
        IMG_load_7_reg_1582 <= IMG_q8;
        IMG_load_8_reg_1587 <= IMG_q7;
        IMG_load_9_reg_1592 <= IMG_q6;
        IMG_load_reg_1547 <= IMG_q15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        IMG_load_10_reg_1597_pp0_iter2_reg <= IMG_load_10_reg_1597;
        IMG_load_10_reg_1597_pp0_iter3_reg <= IMG_load_10_reg_1597_pp0_iter2_reg;
        IMG_load_10_reg_1597_pp0_iter4_reg <= IMG_load_10_reg_1597_pp0_iter3_reg;
        IMG_load_10_reg_1597_pp0_iter5_reg <= IMG_load_10_reg_1597_pp0_iter4_reg;
        IMG_load_10_reg_1597_pp0_iter6_reg <= IMG_load_10_reg_1597_pp0_iter5_reg;
        IMG_load_10_reg_1597_pp0_iter7_reg <= IMG_load_10_reg_1597_pp0_iter6_reg;
        IMG_load_10_reg_1597_pp0_iter8_reg <= IMG_load_10_reg_1597_pp0_iter7_reg;
        IMG_load_11_reg_1602_pp0_iter2_reg <= IMG_load_11_reg_1602;
        IMG_load_11_reg_1602_pp0_iter3_reg <= IMG_load_11_reg_1602_pp0_iter2_reg;
        IMG_load_11_reg_1602_pp0_iter4_reg <= IMG_load_11_reg_1602_pp0_iter3_reg;
        IMG_load_11_reg_1602_pp0_iter5_reg <= IMG_load_11_reg_1602_pp0_iter4_reg;
        IMG_load_11_reg_1602_pp0_iter6_reg <= IMG_load_11_reg_1602_pp0_iter5_reg;
        IMG_load_11_reg_1602_pp0_iter7_reg <= IMG_load_11_reg_1602_pp0_iter6_reg;
        IMG_load_11_reg_1602_pp0_iter8_reg <= IMG_load_11_reg_1602_pp0_iter7_reg;
        IMG_load_12_reg_1607_pp0_iter2_reg <= IMG_load_12_reg_1607;
        IMG_load_12_reg_1607_pp0_iter3_reg <= IMG_load_12_reg_1607_pp0_iter2_reg;
        IMG_load_12_reg_1607_pp0_iter4_reg <= IMG_load_12_reg_1607_pp0_iter3_reg;
        IMG_load_12_reg_1607_pp0_iter5_reg <= IMG_load_12_reg_1607_pp0_iter4_reg;
        IMG_load_12_reg_1607_pp0_iter6_reg <= IMG_load_12_reg_1607_pp0_iter5_reg;
        IMG_load_12_reg_1607_pp0_iter7_reg <= IMG_load_12_reg_1607_pp0_iter6_reg;
        IMG_load_12_reg_1607_pp0_iter8_reg <= IMG_load_12_reg_1607_pp0_iter7_reg;
        IMG_load_13_reg_1612_pp0_iter2_reg <= IMG_load_13_reg_1612;
        IMG_load_13_reg_1612_pp0_iter3_reg <= IMG_load_13_reg_1612_pp0_iter2_reg;
        IMG_load_13_reg_1612_pp0_iter4_reg <= IMG_load_13_reg_1612_pp0_iter3_reg;
        IMG_load_13_reg_1612_pp0_iter5_reg <= IMG_load_13_reg_1612_pp0_iter4_reg;
        IMG_load_13_reg_1612_pp0_iter6_reg <= IMG_load_13_reg_1612_pp0_iter5_reg;
        IMG_load_13_reg_1612_pp0_iter7_reg <= IMG_load_13_reg_1612_pp0_iter6_reg;
        IMG_load_13_reg_1612_pp0_iter8_reg <= IMG_load_13_reg_1612_pp0_iter7_reg;
        IMG_load_14_reg_1617_pp0_iter2_reg <= IMG_load_14_reg_1617;
        IMG_load_14_reg_1617_pp0_iter3_reg <= IMG_load_14_reg_1617_pp0_iter2_reg;
        IMG_load_14_reg_1617_pp0_iter4_reg <= IMG_load_14_reg_1617_pp0_iter3_reg;
        IMG_load_14_reg_1617_pp0_iter5_reg <= IMG_load_14_reg_1617_pp0_iter4_reg;
        IMG_load_14_reg_1617_pp0_iter6_reg <= IMG_load_14_reg_1617_pp0_iter5_reg;
        IMG_load_14_reg_1617_pp0_iter7_reg <= IMG_load_14_reg_1617_pp0_iter6_reg;
        IMG_load_14_reg_1617_pp0_iter8_reg <= IMG_load_14_reg_1617_pp0_iter7_reg;
        IMG_load_15_reg_1622_pp0_iter2_reg <= IMG_load_15_reg_1622;
        IMG_load_15_reg_1622_pp0_iter3_reg <= IMG_load_15_reg_1622_pp0_iter2_reg;
        IMG_load_15_reg_1622_pp0_iter4_reg <= IMG_load_15_reg_1622_pp0_iter3_reg;
        IMG_load_15_reg_1622_pp0_iter5_reg <= IMG_load_15_reg_1622_pp0_iter4_reg;
        IMG_load_15_reg_1622_pp0_iter6_reg <= IMG_load_15_reg_1622_pp0_iter5_reg;
        IMG_load_15_reg_1622_pp0_iter7_reg <= IMG_load_15_reg_1622_pp0_iter6_reg;
        IMG_load_15_reg_1622_pp0_iter8_reg <= IMG_load_15_reg_1622_pp0_iter7_reg;
        IMG_load_1_reg_1552_pp0_iter2_reg <= IMG_load_1_reg_1552;
        IMG_load_1_reg_1552_pp0_iter3_reg <= IMG_load_1_reg_1552_pp0_iter2_reg;
        IMG_load_1_reg_1552_pp0_iter4_reg <= IMG_load_1_reg_1552_pp0_iter3_reg;
        IMG_load_1_reg_1552_pp0_iter5_reg <= IMG_load_1_reg_1552_pp0_iter4_reg;
        IMG_load_1_reg_1552_pp0_iter6_reg <= IMG_load_1_reg_1552_pp0_iter5_reg;
        IMG_load_1_reg_1552_pp0_iter7_reg <= IMG_load_1_reg_1552_pp0_iter6_reg;
        IMG_load_1_reg_1552_pp0_iter8_reg <= IMG_load_1_reg_1552_pp0_iter7_reg;
        IMG_load_2_reg_1557_pp0_iter2_reg <= IMG_load_2_reg_1557;
        IMG_load_2_reg_1557_pp0_iter3_reg <= IMG_load_2_reg_1557_pp0_iter2_reg;
        IMG_load_2_reg_1557_pp0_iter4_reg <= IMG_load_2_reg_1557_pp0_iter3_reg;
        IMG_load_2_reg_1557_pp0_iter5_reg <= IMG_load_2_reg_1557_pp0_iter4_reg;
        IMG_load_2_reg_1557_pp0_iter6_reg <= IMG_load_2_reg_1557_pp0_iter5_reg;
        IMG_load_2_reg_1557_pp0_iter7_reg <= IMG_load_2_reg_1557_pp0_iter6_reg;
        IMG_load_2_reg_1557_pp0_iter8_reg <= IMG_load_2_reg_1557_pp0_iter7_reg;
        IMG_load_3_reg_1562_pp0_iter2_reg <= IMG_load_3_reg_1562;
        IMG_load_3_reg_1562_pp0_iter3_reg <= IMG_load_3_reg_1562_pp0_iter2_reg;
        IMG_load_3_reg_1562_pp0_iter4_reg <= IMG_load_3_reg_1562_pp0_iter3_reg;
        IMG_load_3_reg_1562_pp0_iter5_reg <= IMG_load_3_reg_1562_pp0_iter4_reg;
        IMG_load_3_reg_1562_pp0_iter6_reg <= IMG_load_3_reg_1562_pp0_iter5_reg;
        IMG_load_3_reg_1562_pp0_iter7_reg <= IMG_load_3_reg_1562_pp0_iter6_reg;
        IMG_load_3_reg_1562_pp0_iter8_reg <= IMG_load_3_reg_1562_pp0_iter7_reg;
        IMG_load_4_reg_1567_pp0_iter2_reg <= IMG_load_4_reg_1567;
        IMG_load_4_reg_1567_pp0_iter3_reg <= IMG_load_4_reg_1567_pp0_iter2_reg;
        IMG_load_4_reg_1567_pp0_iter4_reg <= IMG_load_4_reg_1567_pp0_iter3_reg;
        IMG_load_4_reg_1567_pp0_iter5_reg <= IMG_load_4_reg_1567_pp0_iter4_reg;
        IMG_load_4_reg_1567_pp0_iter6_reg <= IMG_load_4_reg_1567_pp0_iter5_reg;
        IMG_load_4_reg_1567_pp0_iter7_reg <= IMG_load_4_reg_1567_pp0_iter6_reg;
        IMG_load_4_reg_1567_pp0_iter8_reg <= IMG_load_4_reg_1567_pp0_iter7_reg;
        IMG_load_5_reg_1572_pp0_iter2_reg <= IMG_load_5_reg_1572;
        IMG_load_5_reg_1572_pp0_iter3_reg <= IMG_load_5_reg_1572_pp0_iter2_reg;
        IMG_load_5_reg_1572_pp0_iter4_reg <= IMG_load_5_reg_1572_pp0_iter3_reg;
        IMG_load_5_reg_1572_pp0_iter5_reg <= IMG_load_5_reg_1572_pp0_iter4_reg;
        IMG_load_5_reg_1572_pp0_iter6_reg <= IMG_load_5_reg_1572_pp0_iter5_reg;
        IMG_load_5_reg_1572_pp0_iter7_reg <= IMG_load_5_reg_1572_pp0_iter6_reg;
        IMG_load_5_reg_1572_pp0_iter8_reg <= IMG_load_5_reg_1572_pp0_iter7_reg;
        IMG_load_6_reg_1577_pp0_iter2_reg <= IMG_load_6_reg_1577;
        IMG_load_6_reg_1577_pp0_iter3_reg <= IMG_load_6_reg_1577_pp0_iter2_reg;
        IMG_load_6_reg_1577_pp0_iter4_reg <= IMG_load_6_reg_1577_pp0_iter3_reg;
        IMG_load_6_reg_1577_pp0_iter5_reg <= IMG_load_6_reg_1577_pp0_iter4_reg;
        IMG_load_6_reg_1577_pp0_iter6_reg <= IMG_load_6_reg_1577_pp0_iter5_reg;
        IMG_load_6_reg_1577_pp0_iter7_reg <= IMG_load_6_reg_1577_pp0_iter6_reg;
        IMG_load_6_reg_1577_pp0_iter8_reg <= IMG_load_6_reg_1577_pp0_iter7_reg;
        IMG_load_7_reg_1582_pp0_iter2_reg <= IMG_load_7_reg_1582;
        IMG_load_7_reg_1582_pp0_iter3_reg <= IMG_load_7_reg_1582_pp0_iter2_reg;
        IMG_load_7_reg_1582_pp0_iter4_reg <= IMG_load_7_reg_1582_pp0_iter3_reg;
        IMG_load_7_reg_1582_pp0_iter5_reg <= IMG_load_7_reg_1582_pp0_iter4_reg;
        IMG_load_7_reg_1582_pp0_iter6_reg <= IMG_load_7_reg_1582_pp0_iter5_reg;
        IMG_load_7_reg_1582_pp0_iter7_reg <= IMG_load_7_reg_1582_pp0_iter6_reg;
        IMG_load_7_reg_1582_pp0_iter8_reg <= IMG_load_7_reg_1582_pp0_iter7_reg;
        IMG_load_8_reg_1587_pp0_iter2_reg <= IMG_load_8_reg_1587;
        IMG_load_8_reg_1587_pp0_iter3_reg <= IMG_load_8_reg_1587_pp0_iter2_reg;
        IMG_load_8_reg_1587_pp0_iter4_reg <= IMG_load_8_reg_1587_pp0_iter3_reg;
        IMG_load_8_reg_1587_pp0_iter5_reg <= IMG_load_8_reg_1587_pp0_iter4_reg;
        IMG_load_8_reg_1587_pp0_iter6_reg <= IMG_load_8_reg_1587_pp0_iter5_reg;
        IMG_load_8_reg_1587_pp0_iter7_reg <= IMG_load_8_reg_1587_pp0_iter6_reg;
        IMG_load_8_reg_1587_pp0_iter8_reg <= IMG_load_8_reg_1587_pp0_iter7_reg;
        IMG_load_9_reg_1592_pp0_iter2_reg <= IMG_load_9_reg_1592;
        IMG_load_9_reg_1592_pp0_iter3_reg <= IMG_load_9_reg_1592_pp0_iter2_reg;
        IMG_load_9_reg_1592_pp0_iter4_reg <= IMG_load_9_reg_1592_pp0_iter3_reg;
        IMG_load_9_reg_1592_pp0_iter5_reg <= IMG_load_9_reg_1592_pp0_iter4_reg;
        IMG_load_9_reg_1592_pp0_iter6_reg <= IMG_load_9_reg_1592_pp0_iter5_reg;
        IMG_load_9_reg_1592_pp0_iter7_reg <= IMG_load_9_reg_1592_pp0_iter6_reg;
        IMG_load_9_reg_1592_pp0_iter8_reg <= IMG_load_9_reg_1592_pp0_iter7_reg;
        IMG_load_reg_1547_pp0_iter2_reg <= IMG_load_reg_1547;
        IMG_load_reg_1547_pp0_iter3_reg <= IMG_load_reg_1547_pp0_iter2_reg;
        IMG_load_reg_1547_pp0_iter4_reg <= IMG_load_reg_1547_pp0_iter3_reg;
        IMG_load_reg_1547_pp0_iter5_reg <= IMG_load_reg_1547_pp0_iter4_reg;
        IMG_load_reg_1547_pp0_iter6_reg <= IMG_load_reg_1547_pp0_iter5_reg;
        IMG_load_reg_1547_pp0_iter7_reg <= IMG_load_reg_1547_pp0_iter6_reg;
        IMG_load_reg_1547_pp0_iter8_reg <= IMG_load_reg_1547_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        gmem_addr_1_reg_1541_pp0_iter2_reg <= gmem_addr_1_reg_1541_pp0_iter1_reg;
        gmem_addr_1_reg_1541_pp0_iter3_reg <= gmem_addr_1_reg_1541_pp0_iter2_reg;
        gmem_addr_1_reg_1541_pp0_iter4_reg <= gmem_addr_1_reg_1541_pp0_iter3_reg;
        gmem_addr_1_reg_1541_pp0_iter5_reg <= gmem_addr_1_reg_1541_pp0_iter4_reg;
        gmem_addr_1_reg_1541_pp0_iter6_reg <= gmem_addr_1_reg_1541_pp0_iter5_reg;
        gmem_addr_1_reg_1541_pp0_iter7_reg <= gmem_addr_1_reg_1541_pp0_iter6_reg;
        gmem_addr_1_reg_1541_pp0_iter8_reg <= gmem_addr_1_reg_1541_pp0_iter7_reg;
        gmem_addr_1_reg_1541_pp0_iter9_reg <= gmem_addr_1_reg_1541_pp0_iter8_reg;
        icmp_ln233_reg_1647 <= icmp_ln233_fu_884_p2;
        icmp_ln263_reg_1658 <= icmp_ln263_fu_1133_p2;
        icmp_ln268_reg_1663 <= icmp_ln268_fu_1162_p2;
        icmp_ln273_reg_1668 <= icmp_ln273_fu_1191_p2;
        icmp_ln278_reg_1673 <= icmp_ln278_fu_1220_p2;
        icmp_ln283_reg_1678 <= icmp_ln283_fu_1249_p2;
        icmp_ln288_reg_1683 <= icmp_ln288_fu_1278_p2;
        icmp_ln293_reg_1688 <= icmp_ln293_fu_1307_p2;
        key_num_16_reg_1652 <= key_num_16_fu_1101_p3;
        pixel_in_reg_1627 <= m_axi_gmem_RDATA;
        select_ln301_reg_1693[7 : 0] <= select_ln301_fu_1416_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        gmem_addr_1_reg_1541_pp0_iter1_reg <= gmem_addr_1_reg_1541;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln208_fu_391_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_1_reg_1541 <= sext_ln301_fu_675_p1;
        gmem_addr_reg_1455 <= sext_ln210_1_fu_429_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce0 = 1'b1;
    end else begin
        IMG_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce1 = 1'b1;
    end else begin
        IMG_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce10 = 1'b1;
    end else begin
        IMG_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce11 = 1'b1;
    end else begin
        IMG_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce12 = 1'b1;
    end else begin
        IMG_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce13 = 1'b1;
    end else begin
        IMG_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce14 = 1'b1;
    end else begin
        IMG_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce15 = 1'b1;
    end else begin
        IMG_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce2 = 1'b1;
    end else begin
        IMG_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce3 = 1'b1;
    end else begin
        IMG_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce4 = 1'b1;
    end else begin
        IMG_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce5 = 1'b1;
    end else begin
        IMG_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce6 = 1'b1;
    end else begin
        IMG_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce7 = 1'b1;
    end else begin
        IMG_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce8 = 1'b1;
    end else begin
        IMG_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IMG_ce9 = 1'b1;
    end else begin
        IMG_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln208_fu_391_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 32'd387;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_136;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IMG_address0 = zext_ln293_fu_654_p1;

assign IMG_address1 = zext_ln288_fu_643_p1;

assign IMG_address10 = zext_ln243_fu_544_p1;

assign IMG_address11 = zext_ln238_fu_533_p1;

assign IMG_address12 = zext_ln228_fu_522_p1;

assign IMG_address13 = zext_ln223_fu_511_p1;

assign IMG_address14 = zext_ln218_fu_500_p1;

assign IMG_address15 = zext_ln213_fu_489_p1;

assign IMG_address2 = zext_ln283_fu_632_p1;

assign IMG_address3 = zext_ln278_fu_621_p1;

assign IMG_address4 = zext_ln273_fu_610_p1;

assign IMG_address5 = zext_ln268_fu_599_p1;

assign IMG_address6 = zext_ln263_fu_588_p1;

assign IMG_address7 = zext_ln258_fu_577_p1;

assign IMG_address8 = zext_ln253_fu_566_p1;

assign IMG_address9 = zext_ln248_fu_555_p1;

assign abs12_fu_906_p3 = ((abscond11_fu_900_p2[0:0] == 1'b1) ? sub_ln238_fu_890_p2 : neg10_fu_894_p2);

assign abs15_fu_949_p3 = ((abscond14_fu_943_p2[0:0] == 1'b1) ? sub_ln243_fu_933_p2 : neg13_fu_937_p2);

assign abs18_fu_992_p3 = ((abscond17_fu_986_p2[0:0] == 1'b1) ? sub_ln248_fu_976_p2 : neg16_fu_980_p2);

assign abs21_fu_1039_p3 = ((abscond20_fu_1033_p2[0:0] == 1'b1) ? sub_ln253_fu_1023_p2 : neg19_fu_1027_p2);

assign abs24_fu_1082_p3 = ((abscond23_fu_1076_p2[0:0] == 1'b1) ? sub_ln258_fu_1066_p2 : neg22_fu_1070_p2);

assign abs27_fu_1125_p3 = ((abscond26_fu_1119_p2[0:0] == 1'b1) ? sub_ln263_fu_1109_p2 : neg25_fu_1113_p2);

assign abs30_fu_1154_p3 = ((abscond29_fu_1148_p2[0:0] == 1'b1) ? sub_ln268_fu_1138_p2 : neg28_fu_1142_p2);

assign abs33_fu_1183_p3 = ((abscond32_fu_1177_p2[0:0] == 1'b1) ? sub_ln273_fu_1167_p2 : neg31_fu_1171_p2);

assign abs36_fu_1212_p3 = ((abscond35_fu_1206_p2[0:0] == 1'b1) ? sub_ln278_fu_1196_p2 : neg34_fu_1200_p2);

assign abs39_fu_1241_p3 = ((abscond38_fu_1235_p2[0:0] == 1'b1) ? sub_ln283_fu_1225_p2 : neg37_fu_1229_p2);

assign abs3_fu_765_p3 = ((abscond2_fu_759_p2[0:0] == 1'b1) ? sub_ln218_fu_749_p2 : neg1_fu_753_p2);

assign abs42_fu_1270_p3 = ((abscond41_fu_1264_p2[0:0] == 1'b1) ? sub_ln288_fu_1254_p2 : neg40_fu_1258_p2);

assign abs45_fu_1299_p3 = ((abscond44_fu_1293_p2[0:0] == 1'b1) ? sub_ln293_fu_1283_p2 : neg43_fu_1287_p2);

assign abs6_fu_810_p3 = ((abscond5_fu_804_p2[0:0] == 1'b1) ? sub_ln223_fu_794_p2 : neg4_fu_798_p2);

assign abs9_fu_857_p3 = ((abscond8_fu_851_p2[0:0] == 1'b1) ? sub_ln228_fu_841_p2 : neg7_fu_845_p2);

assign abs_fu_732_p3 = ((abscond_fu_726_p2[0:0] == 1'b1) ? sub_ln213_fu_716_p2 : neg_fu_720_p2);

assign abscond11_fu_900_p2 = (($signed(sub_ln238_fu_890_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond14_fu_943_p2 = (($signed(sub_ln243_fu_933_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond17_fu_986_p2 = (($signed(sub_ln248_fu_976_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond20_fu_1033_p2 = (($signed(sub_ln253_fu_1023_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond23_fu_1076_p2 = (($signed(sub_ln258_fu_1066_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond26_fu_1119_p2 = (($signed(sub_ln263_fu_1109_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond29_fu_1148_p2 = (($signed(sub_ln268_fu_1138_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond2_fu_759_p2 = (($signed(sub_ln218_fu_749_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond32_fu_1177_p2 = (($signed(sub_ln273_fu_1167_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond35_fu_1206_p2 = (($signed(sub_ln278_fu_1196_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond38_fu_1235_p2 = (($signed(sub_ln283_fu_1225_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond41_fu_1264_p2 = (($signed(sub_ln288_fu_1254_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond44_fu_1293_p2 = (($signed(sub_ln293_fu_1283_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond5_fu_804_p2 = (($signed(sub_ln223_fu_794_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond8_fu_851_p2 = (($signed(sub_ln228_fu_841_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond_fu_726_p2 = (($signed(sub_ln213_fu_716_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign add_ln210_fu_413_p2 = ($signed(sext_ln210_fu_409_p1) + $signed(img_in));

assign add_ln213_fu_483_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16000));

assign add_ln218_fu_494_p2 = (empty_19_fu_397_p1 + 14'd3);

assign add_ln223_fu_505_p2 = (empty_19_fu_397_p1 + 14'd384);

assign add_ln228_fu_516_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16381));

assign add_ln238_fu_527_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16001));

assign add_ln243_fu_538_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16130));

assign add_ln248_fu_549_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16259));

assign add_ln253_fu_560_p2 = (empty_19_fu_397_p1 + 14'd131);

assign add_ln258_fu_571_p2 = (empty_19_fu_397_p1 + 14'd258);

assign add_ln263_fu_582_p2 = (empty_19_fu_397_p1 + 14'd385);

assign add_ln268_fu_593_p2 = (empty_19_fu_397_p1 + 14'd383);

assign add_ln273_fu_604_p2 = (empty_19_fu_397_p1 + 14'd254);

assign add_ln278_fu_615_p2 = (empty_19_fu_397_p1 + 14'd125);

assign add_ln283_fu_626_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16253));

assign add_ln288_fu_637_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd16126));

assign add_ln293_fu_648_p2 = ($signed(empty_19_fu_397_p1) + $signed(14'd15999));

assign add_ln299_fu_659_p2 = ($signed(sext_ln210_fu_409_p1) + $signed(img_out));

assign and_ln298_fu_1411_p2 = (icmp_ln298_fu_1405_p2 & icmp_ln233_reg_1647);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter16 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter16 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter16 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (m_axi_gmem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter16 = (m_axi_gmem_BVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter8 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_19_fu_397_p1 = ap_sig_allocacmp_i_4[13:0];

assign empty_fu_387_p1 = ap_sig_allocacmp_i_4[6:0];

assign i_5_fu_691_p2 = (ap_sig_allocacmp_i_4 + 32'd6);

assign i_6_fu_697_p3 = ((icmp_ln303_fu_685_p2[0:0] == 1'b1) ? i_5_fu_691_p2 : ap_sig_allocacmp_i_4);

assign i_7_fu_705_p2 = (i_6_fu_697_p3 + 32'd1);

assign icmp_ln208_fu_391_p2 = (($signed(ap_sig_allocacmp_i_4) < $signed(32'd15997)) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_773_p2 = (($signed(abs3_fu_765_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_818_p2 = (($signed(abs6_fu_810_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln228_fu_865_p2 = (($signed(abs9_fu_857_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_884_p2 = ((key_num_6_fu_876_p3 > 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_914_p2 = (($signed(abs12_fu_906_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_957_p2 = (($signed(abs15_fu_949_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_1000_p2 = (($signed(abs18_fu_992_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_1047_p2 = (($signed(abs21_fu_1039_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_1090_p2 = (($signed(abs24_fu_1082_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_1133_p2 = (($signed(abs27_fu_1125_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln268_fu_1162_p2 = (($signed(abs30_fu_1154_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln273_fu_1191_p2 = (($signed(abs33_fu_1183_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_1220_p2 = (($signed(abs36_fu_1212_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln283_fu_1249_p2 = (($signed(abs39_fu_1241_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln288_fu_1278_p2 = (($signed(abs42_fu_1270_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_1307_p2 = (($signed(abs45_fu_1299_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_1405_p2 = ((key_num_30_fu_1398_p3 > 5'd11) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_685_p2 = ((select_ln212_fu_475_p3 == 8'd124) ? 1'b1 : 1'b0);

assign key_num_10_fu_968_p3 = ((icmp_ln243_fu_957_p2[0:0] == 1'b1) ? key_num_9_fu_962_p2 : key_num_8_fu_925_p3);

assign key_num_11_fu_1005_p2 = (key_num_10_fu_968_p3 + 3'd1);

assign key_num_12_fu_1011_p3 = ((icmp_ln248_fu_1000_p2[0:0] == 1'b1) ? key_num_11_fu_1005_p2 : key_num_10_fu_968_p3);

assign key_num_13_fu_1052_p2 = (zext_ln201_2_fu_1019_p1 + 4'd1);

assign key_num_14_fu_1058_p3 = ((icmp_ln253_fu_1047_p2[0:0] == 1'b1) ? key_num_13_fu_1052_p2 : zext_ln201_2_fu_1019_p1);

assign key_num_15_fu_1095_p2 = (key_num_14_fu_1058_p3 + 4'd1);

assign key_num_16_fu_1101_p3 = ((icmp_ln258_fu_1090_p2[0:0] == 1'b1) ? key_num_15_fu_1095_p2 : key_num_14_fu_1058_p3);

assign key_num_17_fu_1312_p2 = (key_num_16_reg_1652 + 4'd1);

assign key_num_18_fu_1317_p3 = ((icmp_ln263_reg_1658[0:0] == 1'b1) ? key_num_17_fu_1312_p2 : key_num_16_reg_1652);

assign key_num_19_fu_1323_p2 = (key_num_18_fu_1317_p3 + 4'd1);

assign key_num_1_fu_778_p3 = ((key_num_fu_740_p2[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign key_num_20_fu_1329_p3 = ((icmp_ln268_reg_1663[0:0] == 1'b1) ? key_num_19_fu_1323_p2 : key_num_18_fu_1317_p3);

assign key_num_21_fu_1336_p2 = (key_num_20_fu_1329_p3 + 4'd1);

assign key_num_22_fu_1342_p3 = ((icmp_ln273_reg_1668[0:0] == 1'b1) ? key_num_21_fu_1336_p2 : key_num_20_fu_1329_p3);

assign key_num_23_fu_1349_p2 = (key_num_22_fu_1342_p3 + 4'd1);

assign key_num_24_fu_1355_p3 = ((icmp_ln278_reg_1673[0:0] == 1'b1) ? key_num_23_fu_1349_p2 : key_num_22_fu_1342_p3);

assign key_num_25_fu_1362_p2 = (key_num_24_fu_1355_p3 + 4'd1);

assign key_num_26_fu_1368_p3 = ((icmp_ln283_reg_1678[0:0] == 1'b1) ? key_num_25_fu_1362_p2 : key_num_24_fu_1355_p3);

assign key_num_27_fu_1375_p2 = (key_num_26_fu_1368_p3 + 4'd1);

assign key_num_28_fu_1381_p3 = ((icmp_ln288_reg_1683[0:0] == 1'b1) ? key_num_27_fu_1375_p2 : key_num_26_fu_1368_p3);

assign key_num_29_fu_1392_p2 = (zext_ln201_3_fu_1388_p1 + 5'd1);

assign key_num_2_fu_786_p3 = ((icmp_ln218_fu_773_p2[0:0] == 1'b1) ? key_num_1_fu_778_p3 : zext_ln201_fu_745_p1);

assign key_num_30_fu_1398_p3 = ((icmp_ln293_reg_1688[0:0] == 1'b1) ? key_num_29_fu_1392_p2 : zext_ln201_3_fu_1388_p1);

assign key_num_3_fu_823_p2 = (key_num_2_fu_786_p3 + 2'd1);

assign key_num_4_fu_829_p3 = ((icmp_ln223_fu_818_p2[0:0] == 1'b1) ? key_num_3_fu_823_p2 : key_num_2_fu_786_p3);

assign key_num_5_fu_870_p2 = (zext_ln201_1_fu_837_p1 + 3'd1);

assign key_num_6_fu_876_p3 = ((icmp_ln228_fu_865_p2[0:0] == 1'b1) ? key_num_5_fu_870_p2 : zext_ln201_1_fu_837_p1);

assign key_num_7_fu_919_p2 = (key_num_6_fu_876_p3 + 3'd1);

assign key_num_8_fu_925_p3 = ((icmp_ln238_fu_914_p2[0:0] == 1'b1) ? key_num_7_fu_919_p2 : key_num_6_fu_876_p3);

assign key_num_9_fu_962_p2 = (key_num_8_fu_925_p3 + 3'd1);

assign key_num_fu_740_p2 = (($signed(abs_fu_732_p3) > $signed(threshold)) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = gmem_addr_reg_1455;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_1_reg_1541_pp0_iter9_reg;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = select_ln301_reg_1693;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign neg10_fu_894_p2 = (32'd0 - sub_ln238_fu_890_p2);

assign neg13_fu_937_p2 = (32'd0 - sub_ln243_fu_933_p2);

assign neg16_fu_980_p2 = (32'd0 - sub_ln248_fu_976_p2);

assign neg19_fu_1027_p2 = (32'd0 - sub_ln253_fu_1023_p2);

assign neg1_fu_753_p2 = (32'd0 - sub_ln218_fu_749_p2);

assign neg22_fu_1070_p2 = (32'd0 - sub_ln258_fu_1066_p2);

assign neg25_fu_1113_p2 = (32'd0 - sub_ln263_fu_1109_p2);

assign neg28_fu_1142_p2 = (32'd0 - sub_ln268_fu_1138_p2);

assign neg31_fu_1171_p2 = (32'd0 - sub_ln273_fu_1167_p2);

assign neg34_fu_1200_p2 = (32'd0 - sub_ln278_fu_1196_p2);

assign neg37_fu_1229_p2 = (32'd0 - sub_ln283_fu_1225_p2);

assign neg40_fu_1258_p2 = (32'd0 - sub_ln288_fu_1254_p2);

assign neg43_fu_1287_p2 = (32'd0 - sub_ln293_fu_1283_p2);

assign neg4_fu_798_p2 = (32'd0 - sub_ln223_fu_794_p2);

assign neg7_fu_845_p2 = (32'd0 - sub_ln228_fu_841_p2);

assign neg_fu_720_p2 = (32'd0 - sub_ln213_fu_716_p2);

assign p_and_t_cast_fu_453_p3 = {{1'd0}, {sub_ln212_fu_447_p2}};

assign select_ln212_fu_475_p3 = ((tmp_fu_439_p3[0:0] == 1'b1) ? sub_ln212_1_fu_461_p2 : tmp_3_fu_467_p3);

assign select_ln301_fu_1416_p3 = ((and_ln298_fu_1411_p2[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign sext_ln210_1_fu_429_p1 = $signed(trunc_ln1_fu_419_p4);

assign sext_ln210_fu_409_p1 = $signed(shl_ln_fu_401_p3);

assign sext_ln301_fu_675_p1 = $signed(trunc_ln2_fu_665_p4);

assign shl_ln_fu_401_p3 = {{ap_sig_allocacmp_i_4}, {2'd0}};

assign sub_ln212_1_fu_461_p2 = (8'd0 - p_and_t_cast_fu_453_p3);

assign sub_ln212_fu_447_p2 = (7'd0 - empty_fu_387_p1);

assign sub_ln213_fu_716_p2 = (IMG_load_reg_1547_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln218_fu_749_p2 = (IMG_load_1_reg_1552_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln223_fu_794_p2 = (IMG_load_2_reg_1557_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln228_fu_841_p2 = (IMG_load_3_reg_1562_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln238_fu_890_p2 = (IMG_load_4_reg_1567_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln243_fu_933_p2 = (IMG_load_5_reg_1572_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln248_fu_976_p2 = (IMG_load_6_reg_1577_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln253_fu_1023_p2 = (IMG_load_7_reg_1582_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln258_fu_1066_p2 = (IMG_load_8_reg_1587_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln263_fu_1109_p2 = (IMG_load_9_reg_1592_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln268_fu_1138_p2 = (IMG_load_10_reg_1597_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln273_fu_1167_p2 = (IMG_load_11_reg_1602_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln278_fu_1196_p2 = (IMG_load_12_reg_1607_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln283_fu_1225_p2 = (IMG_load_13_reg_1612_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln288_fu_1254_p2 = (IMG_load_14_reg_1617_pp0_iter8_reg - pixel_in_reg_1627);

assign sub_ln293_fu_1283_p2 = (IMG_load_15_reg_1622_pp0_iter8_reg - pixel_in_reg_1627);

assign tmp_3_fu_467_p3 = {{1'd0}, {empty_fu_387_p1}};

assign tmp_fu_439_p3 = ap_sig_allocacmp_i_4[32'd31];

assign trunc_ln1_fu_419_p4 = {{add_ln210_fu_413_p2[63:2]}};

assign trunc_ln2_fu_665_p4 = {{add_ln299_fu_659_p2[63:2]}};

assign zext_ln201_1_fu_837_p1 = key_num_4_fu_829_p3;

assign zext_ln201_2_fu_1019_p1 = key_num_12_fu_1011_p3;

assign zext_ln201_3_fu_1388_p1 = key_num_28_fu_1381_p3;

assign zext_ln201_fu_745_p1 = key_num_fu_740_p2;

assign zext_ln213_fu_489_p1 = add_ln213_fu_483_p2;

assign zext_ln218_fu_500_p1 = add_ln218_fu_494_p2;

assign zext_ln223_fu_511_p1 = add_ln223_fu_505_p2;

assign zext_ln228_fu_522_p1 = add_ln228_fu_516_p2;

assign zext_ln238_fu_533_p1 = add_ln238_fu_527_p2;

assign zext_ln243_fu_544_p1 = add_ln243_fu_538_p2;

assign zext_ln248_fu_555_p1 = add_ln248_fu_549_p2;

assign zext_ln253_fu_566_p1 = add_ln253_fu_560_p2;

assign zext_ln258_fu_577_p1 = add_ln258_fu_571_p2;

assign zext_ln263_fu_588_p1 = add_ln263_fu_582_p2;

assign zext_ln268_fu_599_p1 = add_ln268_fu_593_p2;

assign zext_ln273_fu_610_p1 = add_ln273_fu_604_p2;

assign zext_ln278_fu_621_p1 = add_ln278_fu_615_p2;

assign zext_ln283_fu_632_p1 = add_ln283_fu_626_p2;

assign zext_ln288_fu_643_p1 = add_ln288_fu_637_p2;

assign zext_ln293_fu_654_p1 = add_ln293_fu_648_p2;

always @ (posedge ap_clk) begin
    select_ln301_reg_1693[31:8] <= 24'b000000000000000000000000;
end

endmodule //fast_accel_fast_accel_Pipeline_VITIS_LOOP_208_2
