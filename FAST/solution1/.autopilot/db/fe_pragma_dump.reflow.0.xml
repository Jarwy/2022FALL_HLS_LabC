<pragmas>
<pragma file="FAST/solution1/fast.cpp" line="19" pragmaType="pipeline" parentfunction="fast_accel" off="0" ii="-1" rewind="0" style=""/>
<pragma file="FAST/solution1/fast.cpp" line="14" pragmaType="pipeline" parentfunction="fast_accel" off="0" ii="-1" rewind="0" style=""/>
<pragma file="FAST/solution1/fast.cpp" line="4" pragmaType="interface" parentfunction="fast_accel" mode="m_axi" port="img_in" bundle="" offset="" name="" depth="16384" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="FAST/solution1/fast.cpp" line="5" pragmaType="interface" parentfunction="fast_accel" mode="m_axi" port="img_out" bundle="" offset="" name="" depth="16384" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="FAST/solution1/fast.cpp" line="6" pragmaType="interface" parentfunction="fast_accel" mode="s_axilite" port="threshold" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="FAST/solution1/fast.cpp" line="7" pragmaType="interface" parentfunction="fast_accel" mode="s_axilite" port="rows" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="FAST/solution1/fast.cpp" line="8" pragmaType="interface" parentfunction="fast_accel" mode="s_axilite" port="cols" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="227" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<17>(ap_int<17> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1063" pragmaType="inline" parentfunction="bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<9, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1810" pragmaType="inline" parentfunction="bool operator>=<8, false>(ap_int_base<8, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<9, false>::ap_int_base<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1079" pragmaType="inline" parentfunction="bool ap_int_base<8, false>::operator><32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="587" pragmaType="inline" parentfunction="ap_int_base<33, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<9, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1655" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<($_0)32, true>::mod operator%<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="321" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1075" pragmaType="inline" parentfunction="bool ap_int_base<8, false>::operator>=<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="227" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint<33>(ap_int<33> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1810" pragmaType="inline" parentfunction="bool operator<<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1655" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1655" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<($_0)32, true>::minus operator-<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="587" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="221" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<16>(ap_uint<16> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="321" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="221" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<9>(ap_uint<9> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1810" pragmaType="inline" parentfunction="bool operator==<8, false>(ap_int_base<8, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1655" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<($_0)32, true>::div operator/<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="587" pragmaType="inline" parentfunction="ap_int_base<9, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="289" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="219" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="587" pragmaType="inline" parentfunction="ap_int_base<16, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1541" pragmaType="inline" parentfunction="ap_int_base<8, false>::RType<8, false>::minus operator-<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1810" pragmaType="inline" parentfunction="bool operator<<8, false>(ap_int_base<8, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="321" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1540" pragmaType="inline" parentfunction="ap_int_base<8, false>::RType<1, false>::plus operator+<8, false, 1, false>(ap_int_base<8, false> const&, ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1810" pragmaType="inline" parentfunction="bool operator><8, false>(ap_int_base<8, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<16, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="315" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(bool)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="136" pragmaType="inline" parentfunction="ap_int<9>::ap_int<9, true>(ap_int_base<9, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1558" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<32, true>::div operator/<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1540" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<32, true>::plus operator+<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="289" pragmaType="inline" parentfunction="ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<9, true>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<17, true>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<9, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1559" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<32, true>::mod operator%<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1071" pragmaType="inline" parentfunction="bool ap_int_base<8, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="136" pragmaType="inline" parentfunction="ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="136" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1541" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<32, true>::minus operator-<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int.h" line="289" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="1071" pragmaType="inline" parentfunction="bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<16, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="922" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<1, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<9, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="517" pragmaType="inline" parentfunction="ssdm_int<33, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="517" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="885" pragmaType="inline" parentfunction="ap_int_base<8, false>& ap_int_base<8, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="517" pragmaType="inline" parentfunction="ssdm_int<9, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="517" pragmaType="inline" parentfunction="ssdm_int<17, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="922" pragmaType="inline" parentfunction="ap_int_base<16, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_common.h" line="524" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="885" pragmaType="inline" parentfunction="ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="805" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="805" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="805" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="805" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="E:/Xilinx_2021.2/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h" line="734" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
